{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Wiki of Han My private wiki docs for software test and other knowleges. For more information please vist my github home page https://github.com/hmyh1202, also jianshu home page https://www.jianshu.com/u/376d1de2d8e7. This wiki was build using mkdocs, for support and full documentation visit mkdocs.org . easy commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Home"},{"location":"#welcome-to-wiki-of-han","text":"My private wiki docs for software test and other knowleges. For more information please vist my github home page https://github.com/hmyh1202, also jianshu home page https://www.jianshu.com/u/376d1de2d8e7. This wiki was build using mkdocs, for support and full documentation visit mkdocs.org .","title":"Welcome to Wiki of Han"},{"location":"#easy-commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"easy commands"},{"location":"ASM/","text":"ASM\uff08allele-specific methylation analysis\uff09 Title: ASM Date: 2019-02-18 Category: methyl Tags: methyl, ASM Author: shaohuaihan Summary: for allele-specific methylation analysis \u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e ASM (allele-specific methylation analysis) is an allele specific methylation analysis is primarily to compare the DNA methylation linked by two different alleles (heterozygous genotype). ASM works for SNP files in standard VCF format, however, may be ok for Bis-SNP output. If it does not work, you\u2019d better reformat the Bis-SNP results. examples allele-specific methylated region shown in Weilong Guo, et al., Scientifc Report, 2016 \u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e $bash run_ASM.sh ASM: Allele specific methylated region/site calling Fisher exact test for site calling Students' t-test for region calling USAGE: run_ASM.sh <ref_FA> <align_BAM> <snp_VCF> <out_Folder> need SAMtools and perl \u53c2\u6570\u8bf4\u660e ref_FA: \u53c2\u8003\u57fa\u56e0\u7ec4FA\u6587\u4ef6\uff0c\u9700\u8981\u6709fai\u7684\u7d22\u5f15\uff0csamtools\u5b8c\u6210 align_BAM\uff1a \u6bd4\u5bf9\u6587\u4ef6\uff0c\u9700\u8981\u6709bai\u7d22\u5f15\uff0csamtools\u5b8c\u6210 snp_VCF\uff1a \u6807\u51c6\u7684VCF\u6587\u4ef6\uff0c\u82e5\u662fbisSNP\u68c0\u6d4b\uff0c\u53ef\u80fd\u9700\u8981\u7b80\u5355\u5904\u7406\u4e00\u4e0b \u5176\u4ed6\u53c2\u6570\u5185\u90e8\u9ed8\u8ba4 \u4f7f\u7528\u793a\u4f8b bash bash run_ASM.sh test.fa test.bam test.vcf ./ shell\u4e2d\u5c06\u6240\u8f93\u5165\u7684\u6587\u4ef6\u5982\u57fa\u56e0\u7ec4fa\u3001\u6bd4\u5bf9\u540eBAM\u5747\u8fde\u63a5\u5230\u8f93\u51fa\u8def\u5f84\uff0c\u91cd\u65b0\u8fdb\u884c\u7d22\u5f15\u548c\u540e\u7eed\u5206\u6790 ### ASS\uff08allele specific methylated site\uff09\u8f93\u51fa\u793a\u4f8b\uff1a Chr SNP_Pos Ref Allele1 Allele2 C_Pos Allele1_linked_C Allele2_linked_C Allele1_linked_C_met Allele2_linked_C_met pvalue fdr ASM Chr1 8949221 T T A 8949252 30,2 6,0 0.94 1.00 1.00e+00 1.00e+00 FALSE \u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a Chr: \u67d3\u8272\u4f53\u7f16\u53f7 SNP_Pos: SNP\u76841-based\u6bd4\u5bf9\u4f4d\u7f6e Ref: \u53c2\u8003\u57fa\u56e0\u7ec4\u78b1\u57fa Allele1: \u7b49\u4f4d\u6838\u82f7\u91781 [ATCG] Allele2: \u7b49\u4f4d\u6838\u82f7\u91782 [ATCG] C_Pos: C\u76841-based\u4f4d\u7f6e Allele1_linked_C: \u4e0eallele1\u76f8\u5173\u8054\u7684\u80de\u5627\u5576\u7684reads\u6df1\u5ea6\uff0c\u9017\u53f7\u5206\u9694\uff0c\u5373\u652f\u6301\u7532\u57fa\u5316\u548c\u975e\u7532\u57fa\u5316reads\u6570\u76ee Allele2_linked_C: \u4e0eallele2\u76f8\u5173\u8054\u7684\u80de\u5627\u5576\u7684reads\u6df1\u5ea6\uff0c\u9017\u53f7\u5206\u9694\uff0c\u5373\u652f\u6301\u7532\u57fa\u5316\u548c\u975e\u7532\u57fa\u5316reads\u6570\u76ee Allele1_linked_C_met: \u4e0eallele1\u5173\u8054\u7684C\u7684\u7532\u57fa\u5316\u6c34\u5e73 Allele2_linked_C_met: \u4e0eallele2\u5173\u8054\u7684C\u7684\u7532\u57fa\u5316\u6c34\u5e73 pvalue: t test\u5f97\u5230\u7684p-value fdr: BH\u6821\u6b63\u540e\u7684p-value ASM: TRUE\u8868\u793a\u8be5C\u662fallele\u7279\u5f02\u7532\u57fa\u5316\u7684 ### ASR\uff08allele specific methylated region\uff09\u8f93\u51fa\u793a\u4f8b Chr Pos Ref Allele1 Allele2 Allele1_linked_C Allele2_linked_C Allele1_linked_C_met Allele2_linked_C_met pvalue fdr ASM chr1 8943402 A A T 1-1 0.8-1 1 0.9 5.01e-01 7.52e-01 FALSE \u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a Chr: \u67d3\u8272\u4f53\u7f16\u53f7 Pos: SNP\u76841-based\u6bd4\u5bf9\u4f4d\u7f6e Ref: \u53c2\u8003\u57fa\u56e0\u7ec4\u78b1\u57fa Allele1: \u7b49\u4f4d\u6838\u82f7\u91781 [ATCG] Allele2: \u7b49\u4f4d\u6838\u82f7\u91782 [ATCG] Allele1_linked_C: \u4e0eallele1\u5173\u8054\u7684Cs\u7684\u7532\u57fa\u5316\u6c34\u5e73\uff0c\"-\"\u5206\u9694 Allele2_linked_C: \u4e0eallele2\u5173\u8054\u7684Cs\u7684\u7532\u57fa\u5316\u6c34\u5e73\uff0c\"-\"\u5206\u9694 Allele1_linked_C_met: \u4e0eallele1\u5173\u8054\u7684Cs\u7684\u5e73\u5747\u7532\u57fa\u5316\u6c34\u5e73 Allele2_linked_C_met: \u4e0eallele2\u5173\u8054\u7684Cs\u7684\u5e73\u5747\u7532\u57fa\u5316\u6c34\u5e73 pvalue: t test\u5f97\u5230\u7684p-value fdr: BH\u6821\u6b63\u540e\u7684p-value ASM: TRUE\u8868\u793a\u8be5region\u662fallele\u7279\u5f02\u7532\u57fa\u5316\u7684 Resource Weilong Guo, et al. CGmapTools improves the precision of heterozygous SNV calls and supports allele-specific methylation detection and visualization in bisulfite-sequencing data. 2017, Bioinformatics.","title":"ASM"},{"location":"ASM/#asmallele-specific-methylation-analysis","text":"Title: ASM Date: 2019-02-18 Category: methyl Tags: methyl, ASM Author: shaohuaihan Summary: for allele-specific methylation analysis","title":"ASM\uff08allele-specific methylation analysis\uff09"},{"location":"ASM/#_1","text":"ASM (allele-specific methylation analysis) is an allele specific methylation analysis is primarily to compare the DNA methylation linked by two different alleles (heterozygous genotype). ASM works for SNP files in standard VCF format, however, may be ok for Bis-SNP output. If it does not work, you\u2019d better reformat the Bis-SNP results. examples allele-specific methylated region shown in Weilong Guo, et al., Scientifc Report, 2016","title":"\u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e"},{"location":"ASM/#_2","text":"$bash run_ASM.sh ASM: Allele specific methylated region/site calling Fisher exact test for site calling Students' t-test for region calling USAGE: run_ASM.sh <ref_FA> <align_BAM> <snp_VCF> <out_Folder> need SAMtools and perl","title":"\u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e"},{"location":"ASM/#_3","text":"ref_FA: \u53c2\u8003\u57fa\u56e0\u7ec4FA\u6587\u4ef6\uff0c\u9700\u8981\u6709fai\u7684\u7d22\u5f15\uff0csamtools\u5b8c\u6210 align_BAM\uff1a \u6bd4\u5bf9\u6587\u4ef6\uff0c\u9700\u8981\u6709bai\u7d22\u5f15\uff0csamtools\u5b8c\u6210 snp_VCF\uff1a \u6807\u51c6\u7684VCF\u6587\u4ef6\uff0c\u82e5\u662fbisSNP\u68c0\u6d4b\uff0c\u53ef\u80fd\u9700\u8981\u7b80\u5355\u5904\u7406\u4e00\u4e0b \u5176\u4ed6\u53c2\u6570\u5185\u90e8\u9ed8\u8ba4","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"ASM/#_4","text":"bash bash run_ASM.sh test.fa test.bam test.vcf ./ shell\u4e2d\u5c06\u6240\u8f93\u5165\u7684\u6587\u4ef6\u5982\u57fa\u56e0\u7ec4fa\u3001\u6bd4\u5bf9\u540eBAM\u5747\u8fde\u63a5\u5230\u8f93\u51fa\u8def\u5f84\uff0c\u91cd\u65b0\u8fdb\u884c\u7d22\u5f15\u548c\u540e\u7eed\u5206\u6790 ### ASS\uff08allele specific methylated site\uff09\u8f93\u51fa\u793a\u4f8b\uff1a Chr SNP_Pos Ref Allele1 Allele2 C_Pos Allele1_linked_C Allele2_linked_C Allele1_linked_C_met Allele2_linked_C_met pvalue fdr ASM Chr1 8949221 T T A 8949252 30,2 6,0 0.94 1.00 1.00e+00 1.00e+00 FALSE \u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a Chr: \u67d3\u8272\u4f53\u7f16\u53f7 SNP_Pos: SNP\u76841-based\u6bd4\u5bf9\u4f4d\u7f6e Ref: \u53c2\u8003\u57fa\u56e0\u7ec4\u78b1\u57fa Allele1: \u7b49\u4f4d\u6838\u82f7\u91781 [ATCG] Allele2: \u7b49\u4f4d\u6838\u82f7\u91782 [ATCG] C_Pos: C\u76841-based\u4f4d\u7f6e Allele1_linked_C: \u4e0eallele1\u76f8\u5173\u8054\u7684\u80de\u5627\u5576\u7684reads\u6df1\u5ea6\uff0c\u9017\u53f7\u5206\u9694\uff0c\u5373\u652f\u6301\u7532\u57fa\u5316\u548c\u975e\u7532\u57fa\u5316reads\u6570\u76ee Allele2_linked_C: \u4e0eallele2\u76f8\u5173\u8054\u7684\u80de\u5627\u5576\u7684reads\u6df1\u5ea6\uff0c\u9017\u53f7\u5206\u9694\uff0c\u5373\u652f\u6301\u7532\u57fa\u5316\u548c\u975e\u7532\u57fa\u5316reads\u6570\u76ee Allele1_linked_C_met: \u4e0eallele1\u5173\u8054\u7684C\u7684\u7532\u57fa\u5316\u6c34\u5e73 Allele2_linked_C_met: \u4e0eallele2\u5173\u8054\u7684C\u7684\u7532\u57fa\u5316\u6c34\u5e73 pvalue: t test\u5f97\u5230\u7684p-value fdr: BH\u6821\u6b63\u540e\u7684p-value ASM: TRUE\u8868\u793a\u8be5C\u662fallele\u7279\u5f02\u7532\u57fa\u5316\u7684 ### ASR\uff08allele specific methylated region\uff09\u8f93\u51fa\u793a\u4f8b Chr Pos Ref Allele1 Allele2 Allele1_linked_C Allele2_linked_C Allele1_linked_C_met Allele2_linked_C_met pvalue fdr ASM chr1 8943402 A A T 1-1 0.8-1 1 0.9 5.01e-01 7.52e-01 FALSE \u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a Chr: \u67d3\u8272\u4f53\u7f16\u53f7 Pos: SNP\u76841-based\u6bd4\u5bf9\u4f4d\u7f6e Ref: \u53c2\u8003\u57fa\u56e0\u7ec4\u78b1\u57fa Allele1: \u7b49\u4f4d\u6838\u82f7\u91781 [ATCG] Allele2: \u7b49\u4f4d\u6838\u82f7\u91782 [ATCG] Allele1_linked_C: \u4e0eallele1\u5173\u8054\u7684Cs\u7684\u7532\u57fa\u5316\u6c34\u5e73\uff0c\"-\"\u5206\u9694 Allele2_linked_C: \u4e0eallele2\u5173\u8054\u7684Cs\u7684\u7532\u57fa\u5316\u6c34\u5e73\uff0c\"-\"\u5206\u9694 Allele1_linked_C_met: \u4e0eallele1\u5173\u8054\u7684Cs\u7684\u5e73\u5747\u7532\u57fa\u5316\u6c34\u5e73 Allele2_linked_C_met: \u4e0eallele2\u5173\u8054\u7684Cs\u7684\u5e73\u5747\u7532\u57fa\u5316\u6c34\u5e73 pvalue: t test\u5f97\u5230\u7684p-value fdr: BH\u6821\u6b63\u540e\u7684p-value ASM: TRUE\u8868\u793a\u8be5region\u662fallele\u7279\u5f02\u7532\u57fa\u5316\u7684","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"ASM/#resource","text":"Weilong Guo, et al. CGmapTools improves the precision of heterozygous SNV calls and supports allele-specific methylation detection and visualization in bisulfite-sequencing data. 2017, Bioinformatics.","title":"Resource"},{"location":"BETA/","text":"Binding and Expression Target Analysis (BETA) \u8be5\u5206\u6790\u6574\u5408\u4e86ChIP-seq\u548c\u8f6c\u5f55\u8868\u8fbe\u6c34\u5e73\u6765\u63a2\u7a76\u57fa\u56e0\u8868\u8fbe\u8c03\u63a7\u7684\u673a\u7406\u3002\u6b64\u524d\uff0c\u4e00\u4e9b\u7814\u7a76\u7528\u4e8e\u8f6c\u5f55\u56e0\u5b50\u9776\u57fa\u56e0\u9884\u6d4b\uff0c\u4f46\u662f\u9c9c\u6709\u9ad8\u6548\u7684\u5de5\u5177\u4f9b\u4eba\u4eec\u4f7f\u7528\u3002 \u4f5c\u8005\u5f00\u53d1\u4e86\u540d\u4e3aBETA\u7684\u8f6f\u4ef6\u6765\u7814\u7a76\u7ed3\u5408\u4f4d\u70b9\u4e0e\u8f6c\u5f55\u8868\u8fbe\u7684\u5173\u7cfb\uff0c\u57fa\u4e8e\u7ed3\u5408\u4f4d\u70b9\u4fe1\u606f\u548c\u5dee\u5f02\u8868\u8fbe\u4fe1\u606f\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4e09\u4e2a\u4e3b\u8981\u5206\u6790\uff1a \u200b \uff081\uff09\u7528\u4e8e\u9884\u6d4b\u8f6c\u5f55\u56e0\u5b50\u5c31\u6709\u6fc0\u6d3b\u6216\u6291\u5236\u7684\u529f\u80fd\uff1b \u200b \uff082\uff09\u7528\u4e8e\u63a8\u65ad\u8f6c\u5f55\u56e0\u5b50\u7684\u9776\u57fa\u56e0\uff1b \u200b \uff083\uff09\u7528\u4e8e\u9274\u5b9a\u8f6c\u5f55\u56e0\u5b50\u7684motif\u53ca\u5176\u7ed3\u5408\u8005\u3002 \u8be5\u8f6f\u4ef6\u5177\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u5b50\u547d\u4ee4\uff1a \u7b2c\u4e00\u90e8\u5206\uff1a BETA basic\uff1a \u8f6c\u5f55\u56e0\u5b50\u6fc0\u6d3b\u6216\u6291\u5236\u529f\u80fd\u9884\u6d4b\u548c\u76f4\u63a5\u9776\u57fa\u56e0\u68c0\u6d4b\u3002 BETA basic \\ \u2013p peaks.bed \\ \u2013e expr.xls \\ \u2013k BSF \\ \u2013g hg19 \\ --da 500 \\ \u2013n prefix \\ -o outdir \u6d89\u53ca\u53c2\u6570\u53ca\u5176\u4ed6 \u53ef\u9009\u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -p peaks\u7ed3\u5408\u4f4d\u70b9\u6587\u4ef6\uff0cBED\u683c\u5f0f\uff0c\u652f\u63013\u5217\u62165\u5217\u683c\u5f0f\uff0c\u5176\u683c\u5f0f\u4e3a\uff1a \u200b CHROM, START, END\uff08NAME, SCORE\uff09\u3002 \u4f7f\u7528\u57fa\u672c\u76843\u5217\u4fe1\u606f\u5373\u53ef\u3002 \u793a\u4f8b\u5982\u4e0b\uff08\u4e0d\u5305\u542b\u8868\u5934\uff09\uff1a #chrom start end name\uff08\u53ef\u9009\uff09 score\uff08\u53ef\u9009\uff09 chr1 1208689 1209509 AR_LNCaP_2 51.58 chr1 1334246 1335348 AR_LNCaP_7 54.55 chr1 2179351 2180790 AR_LNCaP_9 257.72 macs2\u68c0\u5cf0\u65f6\u523b\u901a\u8fc7p-value\u8fdb\u884cpeak\u7684\u8fc7\u6ee4\u53ea\u4fdd\u755910000\u4e2a\u7ed3\u679c\u3002 -e \u5dee\u5f02\u8868\u8fbe\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528LIMMA\u548cCuffdiff\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u4f7f\u7528BETA specific format\uff08BSF\uff09\u683c\u5f0f\uff0c\u5176\u683c\u5f0f\u5982\u4e0b\uff1a GeneID log2(FC) FDR/pval NM_000015 1.28221 0.185744 NM_000016 0 1 NM_000017 0.0598207 0.844755 -k \u5dee\u5f02\u8868\u8fbe\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u5373LIM, CUF, BSF, O\uff0c\u5206\u522b\u5bf9\u5e94LIMMA\u3001cuffdiff\u6807\u51c6\u8f93\u51fa\u683c\u5f0f\u3001BSF\u683c\u5f0f\u6216\u5176\u4ed6\u683c\u5f0f\u7684\u6587\u4ef6\u9700\u8981\u4f7f\u7528--info\u6307\u5b9a\u3002 -g \u57fa\u56e0\u7ec4\uff0c\u652f\u6301\u4efb\u4f55\u5c0f\u9f20\uff0chg38, hg19, hg18, mm10, mm9\uff0c\u4e5f\u53ef\u4f7f\u7528-r\u6307\u5b9a\u5176\u4ed6\u57fa\u56e0\u7ec4\u6587\u4ef6\u3002 --gname2 \u7ed9\u5b9a\u6b21\u53c2\u6570\u8bf4\u660e\u6587\u4ef6\u4e2d\u7684\u57fa\u56e0\u540d\u79f0\u6216\u8f6c\u5f55\u672c\u540d\u79f0\u662f\u5b98\u65b9\u7684\u57fa\u56e0symbols\uff0c\u9ed8\u8ba4FALSE\u3002 --info \u6307\u5b9a\u8868\u8fbe\u6570\u636e\u4e2d\u7684geneID, up/down status\u548cstatistcal values\u5217\u3002 -r \u53c2\u8003\u57fa\u56e0\u7ec4\u6587\u4ef6\u3002 -o \u8f93\u51fa\u8def\u5f84\u3002 --bl \u662f\u5426\u4f7f\u7528CTCF\u8fb9\u754c\u8fc7\u6ee4\u57fa\u56e0\u5468\u56f4\u7684peaks\uff0c\u9ed8\u8ba4FALSE\u3002 --bf CTCF\u4fdd\u5b88peakBED\u6587\u4ef6\uff0c\u9700\u8981\u540c\u65f6\u6307\u5b9a--bl\u53c2\u6570\u4e14\u57fa\u56e0\u7ec4\u4e0d\u80fd\u6307\u5b9a\u4e3ahg19\u548cmm9\u3002 --pn \u6253\u7b97\u5206\u6790\u7684peaks\u6570\u76ee\uff0c\u9ed8\u8ba410000\u3002 --method \u652f\u6301score\u548cdistance\uff0c\u6307\u5b9aTF/CR\u7ed9\u4f60\u9884\u6d4b\u7684\u65b9\u6cd5\uff0cscore\uff1a\u8c03\u63a7\u6f5c\u80fd\u7684\u6253\u5206\uff0cdisrance\uff1a\u90bb\u8fd1\u7684\u7ed3\u5408peak\u7684\u8ddd\u79bb\u3002 -n \u8f93\u51fa\u6587\u4ef6\u524d\u7f00\u540d\u79f0\u3002 -d \u4eceTSS\u4e00\u5b9a\u8303\u56f4\u5185\u83b7\u53d6peaks\uff0c\u9ed8\u8ba4100000\uff08100kb\uff09\u3002 --df \u8f93\u5165\u4e00\u4e2a0~1\u8303\u56f4\u5185\u7684\u9608\u503c\u6765\u7b5b\u9009\u6700\u663e\u8457\u7684\u5dee\u5f02\u8868\u8fbe\u57fa\u56e0\uff0c\u9ed8\u8ba41\uff0c\u5168\u90e8\u8f93\u5165\u57fa\u56e0\u3002 --da \u901a\u8fc7\u6bd4\u4f8b\u6216\u6570\u76ee\u9009\u53d6\u6700\u663e\u8457\u7684\u5dee\u5f02\u8868\u8fbe\u57fa\u56e0\uff0c\u9ed8\u8ba40.5\u3002\u5982\u679c\u60f3\u4f7f\u7528diff_fdr\u8bf7\u8bbe\u7f6e\u6b64\u53c2\u6570\u4e3a1\u3002 -c \u8bbe\u7f6e0~1\u9608\u503c\uff0c\u901a\u8fc7p\u503c\uff08\u5355\u5c3eKS\u68c0\u9a8c\uff09\u9009\u62e9\u6700\u8fd1\u7684\u9776\u57fa\u56e0\uff0c\u9ed8\u8ba40.001\u3002 \u6d4b\u8bd5\u8fd0\u884c\u65e5\u5fd7\u5982\u4e0b\uff1a BETA basic \\ -p ../peaks.bed \\ -e ../beta_specific_expression.txt \\ -k BSF \\ -g hg19 \\ --da 500 \\ -n basic \\ -o basic_out [15:41:26] Argument List: [15:41:26] Name = basic [15:41:26] Peak File = ../peaks.bed [15:41:26] Top Peaks Number = 10000 [15:41:26] Distance = 100000 bp [15:41:26] Genome = hg19 [15:41:26] Expression File = ../beta_specific_expression.txt [15:41:26] BETA specific Expression Type [15:41:26] Number of differential expressed genes = 500.0 [15:41:26] Differential expressed gene FDR Threshold = 1 [15:41:26] Up/Down Prediction Cutoff = 0.001000 [15:41:26] Function prediction based on regulatory potential [15:41:26] Check ../peaks.bed successfully! [15:41:26] #ID Status Value is the header of the expression file [15:41:26] Checking the differential expression infomation... [15:41:26] Take the first line with Differential Information as an example: NM_000014 -0.325878 0.618293 [15:41:26] Differential Expression file format successful passed [15:41:26] You do not like filter peak by CFCT boundary, it will be filtered only by the distance [15:41:26] Read file <../peaks.bed> OK! All <7031> peaks. [15:41:41] Process <50801> genes [15:41:56] Finished! Preliminary results saved into temporary file: <basic.txt> [11815, 11643] [15:41:56] Genes were seprated to two parts: up regulated and down regulated. cut: write error: Broken pipe cut: write error: Broken pipe [15:41:56] Prepare file for the Up/Down Test null device 1 [15:42:02] Finished, Find the result in basic_function_prediction.pdf [15:42:02] Get the Rank Product of the \"upregulate\" genes [15:42:46] Get the Rank Product of the \"downregulate\" genes ['\"upregulate\"', '\"downregulate\"'] [15:43:30] pick out the peaks 100000bp around the selected genes [15:43:30] Finished: Find target gene associated peaks in basic_out total time: 0:2:4 \u8f93\u51fa\u6587\u4ef6\u5b58\u50a8\u4e8ebasic_out\u6587\u4ef6\u5939\uff1a $tree . \u251c\u2500\u2500 basic_downtarget_associate_peaks.bed \u251c\u2500\u2500 basic_downtarget.txt \u251c\u2500\u2500 basic_function_prediction.pdf \u251c\u2500\u2500 basic_function_prediction.R \u251c\u2500\u2500 basic_uptarget_associate_peaks.bed \u2514\u2500\u2500 basic_uptarget.txt \u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\u9884\u6d4b\u6253\u5206 \u4e0a\u8c03\u8c03\u63a7\u9776\u6807/\u4e0b\u8c03\u8c03\u63a7\u9776\u6807\u6587\u4ef6\uff08basic_uptarget.txt\uff0cbasic_downtarget.txt\uff09 #\u6587\u4ef6\u622a\u53d6\u793a\u4f8b Chroms txStart txEnd refseqID rank product Strands GeneSymbol chr1 27992571 27998724 NM_002038 4.592e-06 - IFI6 chr12 113376237 113411055 NM_006187 4.835e-06 + OAS3 chr12 113344738 113357712 NM_016816 5.523e-06 + OAS1 chr4 169277885 169401665 NM_001012967 5.616e-06 - DDX60L \u4ee5\u57fa\u56e0\u4e3a\u4e2d\u5fc3 \u9776\u57fa\u56e0\u76f8\u5173\u7684peak\u6587\u4ef6\uff08\u662f\u4ee5peak\u4e3a\u4e2d\u5fc3\uff09 chrom pStart pEnd Refseq Symbol Distance Score chr1 27971570 27971739 NM_002038 IFI6 -27070 0.205399174599 chr1 27971776 27971885 NM_002038 IFI6 -26894 0.20685028671 chr12 113364362 113364438 NM_006187 OAS3 -11837 0.377766121894 chr12 113364362 113364438 NM_016816 OAS1 19662 0.276241443606 chr4 169422368 169422769 NM_001012967 DDX60L 20903 0.262863603291 \u4ee5peak\u4e3a\u4e2d\u5fc3 \u7b2c\u4e8c\u90e8\u5206\uff1a BETA plus\uff1a\u8fdb\u884c\u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\u9884\u6d4b\uff0c \u76f4\u63a5\u9776\u57fa\u56e0\u9884\u6d4b\u548c\u9776\u5411\u533a\u57dfmotif\u5206\u6790\uff0c\u6bd4\u57fa\u7840\u7248\u672c\u589e\u52a0\u4e86motif\u5206\u6790 BETA plus \\ \u2013p peaks.bed \\ \u2013e expr.xls \\ \u2013k BSF \\ \u2013g hg19 \\ --gs hg19.fa \\ --bl \u8be5\u6a21\u5757\u4e0ebasic\u76f8\u4f3c\uff0c\u4ee5\u4e0b\u53c2\u6570\u529f\u80fd\u6709\u5dee\u5f02\uff1a --gs \u57fa\u56e0\u5e8f\u5217\u6587\u4ef6\u3002 --mn \u6307\u5b9a0~1\u8303\u56f4\u5185\u6570\u503c\u4f5c\u4e3ap-value\u6216\u5927\u4e8e1\u4f5c\u4e3a\u6570\u76ee\u6765\u83b7\u53d6motif\u7684\u9608\u503c\uff0c \u9ed8\u8ba410\u3002 \u5176\u4ed6\u53c2\u6570\u53c2\u8003 BETA Basic \u53c2\u6570\u63cf\u8ff0\u3002 \u6d4b\u8bd5\u8fd0\u884c\u65e5\u5fd7\u5982\u4e0b\uff1a [16:49:30] Argument List: [16:49:30] Name = NA [16:49:30] Peak File = ../peaks.bed [16:49:30] Top Peaks Number = 10000 [16:49:30] Distance = 100000 bp [16:49:30] Genome = hg19 [16:49:30] Expression File = ../beta_specific_expression.txt [16:49:30] Genome Sequence fasta formated data = hg19.fa [16:49:30] BETA specific Expression Type [16:49:30] Number of differential expressed genes = 0.5 [16:49:30] Differential expressed gene FDR Threshold = 1 [16:49:30] Up/Down Prediction Cutoff = 0.001000 [16:49:30] Function prediction based on regulatory potential [16:49:30] Check ../peaks.bed successfully! [16:49:30] #ID Status Value is the header of the expression file [16:49:30] Checking the differential expression infomation... [16:49:30] Take the first line with Differential Information as an example: NM_000014 -0.325878 0.618293 [16:49:30] Differential Expression file format successful passed [16:49:30] Read file <../peaks.bed> OK! All <7031> peaks. [16:50:16] Process <50801> genes [16:50:25] Finished! Preliminary results saved into temporary file: <NA.txt> [11815, 11643] [16:50:25] Genes were seprated to two parts: up regulated and down regulated. cut: write error: Broken pipe cut: write error: Broken pipe [16:50:26] Prepare file for the Up/Down Test null device 1 [16:51:03] Finished, Find the result in NA_function_prediction.pdf [16:51:03] Get the Rank Product of the \"upregulate\" genes [16:51:45] Get the Rank Product of the \"downregulate\" genes ['\"upregulate\"', '\"downregulate\"'] [16:52:26] pick out the peaks 100000bp around the selected genes [16:52:27] Finished: Find target gene associated peaks in plus_out [16:52:27] get three regions of every peak around the up genes ['up_middle.bed', 'up_left.bed', 'up_right.bed'] [16:53:54] get the fasta format sequence data of the three regions of up [16:53:55] get three regions of every peak around the down genes ['down_middle.bed', 'down_left.bed', 'down_right.bed'] [16:55:14] get the fasta format sequence data of the three regions of down [16:55:14] get three regions of every peak around the non genes ['non_middle.bed', 'non_left.bed', 'non_right.bed'] [16:56:37] get the fasta format sequence data of the three regions of non [16:56:37] run mis to do the known motif scan with cistrome motif database Calculating Background.. A or T: 93234 C or G: 100766 Others: 0 Calculating Background.. A or T: 97696 C or G: 95334 Others: 0 Calculating Background.. A or T: 97264 C or G: 95766 Others: 0 Calculating Background.. A or T: 118812 C or G: 142588 Others: 0 Calculating Background.. A or T: 125071 C or G: 135022 Others: 0 Calculating Background.. A or T: 123892 C or G: 136201 Others: 0 Calculating Background.. A or T: 181589 C or G: 169211 Others: 0 Calculating Background.. A or T: 191633 C or G: 157413 Others: 0 Calculating Background.. A or T: 191487 C or G: 157559 Others: 0 [16:59:58] T statistic test performed here to do the significance testing of every motif [17:58:18] motif result will be in html format Success parser from table. Success parser from table. Success parser from table. Success parser from table. Success parser from table. Success parser from table. [17:58:22] Done: find motif result in beatmotif.html file [17:58:22] Done: find all BETA result in plus_out total time: 1:8:52 \u540c\u6837\uff0cplus\u529f\u80fd\u751f\u6210\u4e0a/\u4e0b\u8c03\u9776\u6807\u6587\u4ef6\u548c\u9776\u57fa\u56e0\u76f8\u5173\u7684peak\u6587\u4ef6\uff0c\u6b64\u5916\u751f\u6210\u4e86\u9776\u57fa\u56e0\u76f8\u5173motif\u7684\u7ed3\u679c\u6587\u4ef6\uff08\u5b58\u653e\u4e8emotifresult\u6587\u4ef6\u5939\uff0c\u5305\u542b\u4e00\u4e2a*motif.html\u7684motif\u5206\u6790\u6587\u4ef6\uff09\u3002 motif\u5206\u6790\u793a\u4f8b\u622a\u56fe\u5982\u4e0b\uff1a \u540c\u65f6\u751f\u6210\u4e0a\u8c03\u3001\u4e0b\u8c03\u5dee\u5f02\u5dee\u5f02motif\u7684\u6587\u4ef6\uff1a MotifID Species Symbol DNA BindDom PSSM Tscore Pvalue MS00266 Homo sapiens MLX Helix-Loop-Helix Family [[[0.534, 0.012, 0.331, 0.123], [0.01, 0.043, 0.152, 0.795], [0.011, 0.963, 0.011, 0.015], [0.955, 0.01, 0.025, 0.01], [0.01, 0.97, 0.01, 0.01], [0.01, 0.01, 0.97, 0.01], [0.01, 0.01, 0.01, 0.97], [0.01, 0.01, 0.97, 0.01], [0.8, 0.03, 0.117, 0.053], [0.066, 0.241, 0.017, 0.676]]] 5.08 4.30e-07 PSSM\uff1a\u4f4d\u7f6e\u7279\u5f02\u6027\u5f97\u5206\u77e9\u9635\uff08position-specific scoring matrix\uff09\uff0cPSSM\u793a\u4f8b\u683c\u5f0f\u4e3a: [[0.2,0.3,0.3,0.2],[0.1,0.8,0.05,0.05]]\uff1b Tscore\uff1at-test\u7684\u7edf\u8ba1\u91cf\u6570\u503c\u3002 \u53e6\u5916\uff0c\u5b98\u7f51\u63d0\u4f9b\u4e86motif\u5206\u6790\u7ed3\u679c\u7684\u5c55\u793a\u793a\u4f8b\u53c2\u8003\uff1a \u200b http://cistrome.org/BETA/motifresult/betamotif.html\u3002 \u7b2c\u4e09\u90e8\u5206\uff1a \u7528\u4e8e\u9884\u6d4bTF\u7684\u9776\u57fa\u56e0\u548c\u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\uff0c\u5c5e\u4e8ebasic\u7684\u7b80\u5316\u6a21\u5757\u3002 BETA minus \\ -p peaks.bed \\ --bl -g hg19 \u53c2\u6570\u53ef\u53c2\u8003basic\u53c2\u6570\u89e3\u91ca\u3002 \u53c2\u8003\u8d44\u6599 \u5b98\u65b9\u4f7f\u7528\u624b\u518c\uff1ahttp://cistrome.org/BETA/tutorial.html BETA\u7f51\u9875\u7248\u5206\u6790\u5165\u53e3\uff1ahttp://cistrome.org/BETA/index.html#runweb \u8f6c\u5f55\u56e0\u5b50motif\u77e5\u8bc6\uff1ahttps://www.jianshu.com/p/ad82fe903e57 \u53c2\u8003\u6587\u732e Wang, S., Sun, H., Ma, J., Zang, C., Wang, C., Wang, J., ... & Liu, X. S. (2013). Target analysis by integration of transcriptome and ChIP-seq data with BETA. Nature protocols , 8(12), 2502-2515.","title":"BETA"},{"location":"BETA/#macs2p-valuepeak10000","text":"-e \u5dee\u5f02\u8868\u8fbe\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528LIMMA\u548cCuffdiff\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u4f7f\u7528BETA specific format\uff08BSF\uff09\u683c\u5f0f\uff0c\u5176\u683c\u5f0f\u5982\u4e0b\uff1a GeneID log2(FC) FDR/pval NM_000015 1.28221 0.185744 NM_000016 0 1 NM_000017 0.0598207 0.844755 -k \u5dee\u5f02\u8868\u8fbe\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u5373LIM, CUF, BSF, O\uff0c\u5206\u522b\u5bf9\u5e94LIMMA\u3001cuffdiff\u6807\u51c6\u8f93\u51fa\u683c\u5f0f\u3001BSF\u683c\u5f0f\u6216\u5176\u4ed6\u683c\u5f0f\u7684\u6587\u4ef6\u9700\u8981\u4f7f\u7528--info\u6307\u5b9a\u3002 -g \u57fa\u56e0\u7ec4\uff0c\u652f\u6301\u4efb\u4f55\u5c0f\u9f20\uff0chg38, hg19, hg18, mm10, mm9\uff0c\u4e5f\u53ef\u4f7f\u7528-r\u6307\u5b9a\u5176\u4ed6\u57fa\u56e0\u7ec4\u6587\u4ef6\u3002 --gname2 \u7ed9\u5b9a\u6b21\u53c2\u6570\u8bf4\u660e\u6587\u4ef6\u4e2d\u7684\u57fa\u56e0\u540d\u79f0\u6216\u8f6c\u5f55\u672c\u540d\u79f0\u662f\u5b98\u65b9\u7684\u57fa\u56e0symbols\uff0c\u9ed8\u8ba4FALSE\u3002 --info \u6307\u5b9a\u8868\u8fbe\u6570\u636e\u4e2d\u7684geneID, up/down status\u548cstatistcal values\u5217\u3002 -r \u53c2\u8003\u57fa\u56e0\u7ec4\u6587\u4ef6\u3002 -o \u8f93\u51fa\u8def\u5f84\u3002 --bl \u662f\u5426\u4f7f\u7528CTCF\u8fb9\u754c\u8fc7\u6ee4\u57fa\u56e0\u5468\u56f4\u7684peaks\uff0c\u9ed8\u8ba4FALSE\u3002 --bf CTCF\u4fdd\u5b88peakBED\u6587\u4ef6\uff0c\u9700\u8981\u540c\u65f6\u6307\u5b9a--bl\u53c2\u6570\u4e14\u57fa\u56e0\u7ec4\u4e0d\u80fd\u6307\u5b9a\u4e3ahg19\u548cmm9\u3002 --pn \u6253\u7b97\u5206\u6790\u7684peaks\u6570\u76ee\uff0c\u9ed8\u8ba410000\u3002 --method \u652f\u6301score\u548cdistance\uff0c\u6307\u5b9aTF/CR\u7ed9\u4f60\u9884\u6d4b\u7684\u65b9\u6cd5\uff0cscore\uff1a\u8c03\u63a7\u6f5c\u80fd\u7684\u6253\u5206\uff0cdisrance\uff1a\u90bb\u8fd1\u7684\u7ed3\u5408peak\u7684\u8ddd\u79bb\u3002 -n \u8f93\u51fa\u6587\u4ef6\u524d\u7f00\u540d\u79f0\u3002 -d \u4eceTSS\u4e00\u5b9a\u8303\u56f4\u5185\u83b7\u53d6peaks\uff0c\u9ed8\u8ba4100000\uff08100kb\uff09\u3002 --df \u8f93\u5165\u4e00\u4e2a0~1\u8303\u56f4\u5185\u7684\u9608\u503c\u6765\u7b5b\u9009\u6700\u663e\u8457\u7684\u5dee\u5f02\u8868\u8fbe\u57fa\u56e0\uff0c\u9ed8\u8ba41\uff0c\u5168\u90e8\u8f93\u5165\u57fa\u56e0\u3002 --da \u901a\u8fc7\u6bd4\u4f8b\u6216\u6570\u76ee\u9009\u53d6\u6700\u663e\u8457\u7684\u5dee\u5f02\u8868\u8fbe\u57fa\u56e0\uff0c\u9ed8\u8ba40.5\u3002\u5982\u679c\u60f3\u4f7f\u7528diff_fdr\u8bf7\u8bbe\u7f6e\u6b64\u53c2\u6570\u4e3a1\u3002 -c \u8bbe\u7f6e0~1\u9608\u503c\uff0c\u901a\u8fc7p\u503c\uff08\u5355\u5c3eKS\u68c0\u9a8c\uff09\u9009\u62e9\u6700\u8fd1\u7684\u9776\u57fa\u56e0\uff0c\u9ed8\u8ba40.001\u3002 \u6d4b\u8bd5\u8fd0\u884c\u65e5\u5fd7\u5982\u4e0b\uff1a BETA basic \\ -p ../peaks.bed \\ -e ../beta_specific_expression.txt \\ -k BSF \\ -g hg19 \\ --da 500 \\ -n basic \\ -o basic_out [15:41:26] Argument List: [15:41:26] Name = basic [15:41:26] Peak File = ../peaks.bed [15:41:26] Top Peaks Number = 10000 [15:41:26] Distance = 100000 bp [15:41:26] Genome = hg19 [15:41:26] Expression File = ../beta_specific_expression.txt [15:41:26] BETA specific Expression Type [15:41:26] Number of differential expressed genes = 500.0 [15:41:26] Differential expressed gene FDR Threshold = 1 [15:41:26] Up/Down Prediction Cutoff = 0.001000 [15:41:26] Function prediction based on regulatory potential [15:41:26] Check ../peaks.bed successfully! [15:41:26] #ID Status Value is the header of the expression file [15:41:26] Checking the differential expression infomation... [15:41:26] Take the first line with Differential Information as an example: NM_000014 -0.325878 0.618293 [15:41:26] Differential Expression file format successful passed [15:41:26] You do not like filter peak by CFCT boundary, it will be filtered only by the distance [15:41:26] Read file <../peaks.bed> OK! All <7031> peaks. [15:41:41] Process <50801> genes [15:41:56] Finished! Preliminary results saved into temporary file: <basic.txt> [11815, 11643] [15:41:56] Genes were seprated to two parts: up regulated and down regulated. cut: write error: Broken pipe cut: write error: Broken pipe [15:41:56] Prepare file for the Up/Down Test null device 1 [15:42:02] Finished, Find the result in basic_function_prediction.pdf [15:42:02] Get the Rank Product of the \"upregulate\" genes [15:42:46] Get the Rank Product of the \"downregulate\" genes ['\"upregulate\"', '\"downregulate\"'] [15:43:30] pick out the peaks 100000bp around the selected genes [15:43:30] Finished: Find target gene associated peaks in basic_out total time: 0:2:4 \u8f93\u51fa\u6587\u4ef6\u5b58\u50a8\u4e8ebasic_out\u6587\u4ef6\u5939\uff1a $tree . \u251c\u2500\u2500 basic_downtarget_associate_peaks.bed \u251c\u2500\u2500 basic_downtarget.txt \u251c\u2500\u2500 basic_function_prediction.pdf \u251c\u2500\u2500 basic_function_prediction.R \u251c\u2500\u2500 basic_uptarget_associate_peaks.bed \u2514\u2500\u2500 basic_uptarget.txt \u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\u9884\u6d4b\u6253\u5206 \u4e0a\u8c03\u8c03\u63a7\u9776\u6807/\u4e0b\u8c03\u8c03\u63a7\u9776\u6807\u6587\u4ef6\uff08basic_uptarget.txt\uff0cbasic_downtarget.txt\uff09 #\u6587\u4ef6\u622a\u53d6\u793a\u4f8b Chroms txStart txEnd refseqID rank product Strands GeneSymbol chr1 27992571 27998724 NM_002038 4.592e-06 - IFI6 chr12 113376237 113411055 NM_006187 4.835e-06 + OAS3 chr12 113344738 113357712 NM_016816 5.523e-06 + OAS1 chr4 169277885 169401665 NM_001012967 5.616e-06 - DDX60L","title":"macs2\u68c0\u5cf0\u65f6\u523b\u901a\u8fc7p-value\u8fdb\u884cpeak\u7684\u8fc7\u6ee4\u53ea\u4fdd\u755910000\u4e2a\u7ed3\u679c\u3002"},{"location":"BETA/#_1","text":"\u9776\u57fa\u56e0\u76f8\u5173\u7684peak\u6587\u4ef6\uff08\u662f\u4ee5peak\u4e3a\u4e2d\u5fc3\uff09 chrom pStart pEnd Refseq Symbol Distance Score chr1 27971570 27971739 NM_002038 IFI6 -27070 0.205399174599 chr1 27971776 27971885 NM_002038 IFI6 -26894 0.20685028671 chr12 113364362 113364438 NM_006187 OAS3 -11837 0.377766121894 chr12 113364362 113364438 NM_016816 OAS1 19662 0.276241443606 chr4 169422368 169422769 NM_001012967 DDX60L 20903 0.262863603291","title":"\u4ee5\u57fa\u56e0\u4e3a\u4e2d\u5fc3"},{"location":"BETA/#peak","text":"\u7b2c\u4e8c\u90e8\u5206\uff1a BETA plus\uff1a\u8fdb\u884c\u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\u9884\u6d4b\uff0c \u76f4\u63a5\u9776\u57fa\u56e0\u9884\u6d4b\u548c\u9776\u5411\u533a\u57dfmotif\u5206\u6790\uff0c\u6bd4\u57fa\u7840\u7248\u672c\u589e\u52a0\u4e86motif\u5206\u6790 BETA plus \\ \u2013p peaks.bed \\ \u2013e expr.xls \\ \u2013k BSF \\ \u2013g hg19 \\ --gs hg19.fa \\ --bl \u8be5\u6a21\u5757\u4e0ebasic\u76f8\u4f3c\uff0c\u4ee5\u4e0b\u53c2\u6570\u529f\u80fd\u6709\u5dee\u5f02\uff1a --gs \u57fa\u56e0\u5e8f\u5217\u6587\u4ef6\u3002 --mn \u6307\u5b9a0~1\u8303\u56f4\u5185\u6570\u503c\u4f5c\u4e3ap-value\u6216\u5927\u4e8e1\u4f5c\u4e3a\u6570\u76ee\u6765\u83b7\u53d6motif\u7684\u9608\u503c\uff0c \u9ed8\u8ba410\u3002 \u5176\u4ed6\u53c2\u6570\u53c2\u8003 BETA Basic \u53c2\u6570\u63cf\u8ff0\u3002 \u6d4b\u8bd5\u8fd0\u884c\u65e5\u5fd7\u5982\u4e0b\uff1a [16:49:30] Argument List: [16:49:30] Name = NA [16:49:30] Peak File = ../peaks.bed [16:49:30] Top Peaks Number = 10000 [16:49:30] Distance = 100000 bp [16:49:30] Genome = hg19 [16:49:30] Expression File = ../beta_specific_expression.txt [16:49:30] Genome Sequence fasta formated data = hg19.fa [16:49:30] BETA specific Expression Type [16:49:30] Number of differential expressed genes = 0.5 [16:49:30] Differential expressed gene FDR Threshold = 1 [16:49:30] Up/Down Prediction Cutoff = 0.001000 [16:49:30] Function prediction based on regulatory potential [16:49:30] Check ../peaks.bed successfully! [16:49:30] #ID Status Value is the header of the expression file [16:49:30] Checking the differential expression infomation... [16:49:30] Take the first line with Differential Information as an example: NM_000014 -0.325878 0.618293 [16:49:30] Differential Expression file format successful passed [16:49:30] Read file <../peaks.bed> OK! All <7031> peaks. [16:50:16] Process <50801> genes [16:50:25] Finished! Preliminary results saved into temporary file: <NA.txt> [11815, 11643] [16:50:25] Genes were seprated to two parts: up regulated and down regulated. cut: write error: Broken pipe cut: write error: Broken pipe [16:50:26] Prepare file for the Up/Down Test null device 1 [16:51:03] Finished, Find the result in NA_function_prediction.pdf [16:51:03] Get the Rank Product of the \"upregulate\" genes [16:51:45] Get the Rank Product of the \"downregulate\" genes ['\"upregulate\"', '\"downregulate\"'] [16:52:26] pick out the peaks 100000bp around the selected genes [16:52:27] Finished: Find target gene associated peaks in plus_out [16:52:27] get three regions of every peak around the up genes ['up_middle.bed', 'up_left.bed', 'up_right.bed'] [16:53:54] get the fasta format sequence data of the three regions of up [16:53:55] get three regions of every peak around the down genes ['down_middle.bed', 'down_left.bed', 'down_right.bed'] [16:55:14] get the fasta format sequence data of the three regions of down [16:55:14] get three regions of every peak around the non genes ['non_middle.bed', 'non_left.bed', 'non_right.bed'] [16:56:37] get the fasta format sequence data of the three regions of non [16:56:37] run mis to do the known motif scan with cistrome motif database Calculating Background.. A or T: 93234 C or G: 100766 Others: 0 Calculating Background.. A or T: 97696 C or G: 95334 Others: 0 Calculating Background.. A or T: 97264 C or G: 95766 Others: 0 Calculating Background.. A or T: 118812 C or G: 142588 Others: 0 Calculating Background.. A or T: 125071 C or G: 135022 Others: 0 Calculating Background.. A or T: 123892 C or G: 136201 Others: 0 Calculating Background.. A or T: 181589 C or G: 169211 Others: 0 Calculating Background.. A or T: 191633 C or G: 157413 Others: 0 Calculating Background.. A or T: 191487 C or G: 157559 Others: 0 [16:59:58] T statistic test performed here to do the significance testing of every motif [17:58:18] motif result will be in html format Success parser from table. Success parser from table. Success parser from table. Success parser from table. Success parser from table. Success parser from table. [17:58:22] Done: find motif result in beatmotif.html file [17:58:22] Done: find all BETA result in plus_out total time: 1:8:52 \u540c\u6837\uff0cplus\u529f\u80fd\u751f\u6210\u4e0a/\u4e0b\u8c03\u9776\u6807\u6587\u4ef6\u548c\u9776\u57fa\u56e0\u76f8\u5173\u7684peak\u6587\u4ef6\uff0c\u6b64\u5916\u751f\u6210\u4e86\u9776\u57fa\u56e0\u76f8\u5173motif\u7684\u7ed3\u679c\u6587\u4ef6\uff08\u5b58\u653e\u4e8emotifresult\u6587\u4ef6\u5939\uff0c\u5305\u542b\u4e00\u4e2a*motif.html\u7684motif\u5206\u6790\u6587\u4ef6\uff09\u3002 motif\u5206\u6790\u793a\u4f8b\u622a\u56fe\u5982\u4e0b\uff1a \u540c\u65f6\u751f\u6210\u4e0a\u8c03\u3001\u4e0b\u8c03\u5dee\u5f02\u5dee\u5f02motif\u7684\u6587\u4ef6\uff1a MotifID Species Symbol DNA BindDom PSSM Tscore Pvalue MS00266 Homo sapiens MLX Helix-Loop-Helix Family [[[0.534, 0.012, 0.331, 0.123], [0.01, 0.043, 0.152, 0.795], [0.011, 0.963, 0.011, 0.015], [0.955, 0.01, 0.025, 0.01], [0.01, 0.97, 0.01, 0.01], [0.01, 0.01, 0.97, 0.01], [0.01, 0.01, 0.01, 0.97], [0.01, 0.01, 0.97, 0.01], [0.8, 0.03, 0.117, 0.053], [0.066, 0.241, 0.017, 0.676]]] 5.08 4.30e-07","title":"\u4ee5peak\u4e3a\u4e2d\u5fc3"},{"location":"BETA/#pssmposition-specific-scoring-matrixpssm-020303020108005005-tscoret-test","text":"\u53e6\u5916\uff0c\u5b98\u7f51\u63d0\u4f9b\u4e86motif\u5206\u6790\u7ed3\u679c\u7684\u5c55\u793a\u793a\u4f8b\u53c2\u8003\uff1a \u200b http://cistrome.org/BETA/motifresult/betamotif.html\u3002 \u7b2c\u4e09\u90e8\u5206\uff1a \u7528\u4e8e\u9884\u6d4bTF\u7684\u9776\u57fa\u56e0\u548c\u6fc0\u6d3b/\u6291\u5236\u529f\u80fd\uff0c\u5c5e\u4e8ebasic\u7684\u7b80\u5316\u6a21\u5757\u3002 BETA minus \\ -p peaks.bed \\ --bl -g hg19","title":"PSSM\uff1a\u4f4d\u7f6e\u7279\u5f02\u6027\u5f97\u5206\u77e9\u9635\uff08position-specific scoring matrix\uff09\uff0cPSSM\u793a\u4f8b\u683c\u5f0f\u4e3a: [[0.2,0.3,0.3,0.2],[0.1,0.8,0.05,0.05]]\uff1b Tscore\uff1at-test\u7684\u7edf\u8ba1\u91cf\u6570\u503c\u3002"},{"location":"BETA/#basic","text":"\u53c2\u8003\u8d44\u6599 \u5b98\u65b9\u4f7f\u7528\u624b\u518c\uff1ahttp://cistrome.org/BETA/tutorial.html BETA\u7f51\u9875\u7248\u5206\u6790\u5165\u53e3\uff1ahttp://cistrome.org/BETA/index.html#runweb \u8f6c\u5f55\u56e0\u5b50motif\u77e5\u8bc6\uff1ahttps://www.jianshu.com/p/ad82fe903e57 \u53c2\u8003\u6587\u732e Wang, S., Sun, H., Ma, J., Zang, C., Wang, C., Wang, J., ... & Liu, X. S. (2013). Target analysis by integration of transcriptome and ChIP-seq data with BETA. Nature protocols , 8(12), 2502-2515.","title":"\u53c2\u6570\u53ef\u53c2\u8003basic\u53c2\u6570\u89e3\u91ca\u3002"},{"location":"CpG_island_classification/","text":"Title: CpG_island_classification Date: 2018-12-12 Category: methyl Tags: CpG island, shore, shelf, BED Author: shaohuaihan Summary: \u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e \u57fa\u4e8e\u7ed9\u5b9a\u7684CpG Island\u6587\u4ef6\uff0c\u63d0\u53d6CpG island\u4fa7\u7ffc\u7684\u533a\u57df\uff0c\u8bf8\u5982CpG Shore\u3001CpG Shelf\u533a\u57df\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002 CpG Island\u6587\u4ef6\u53ef\u4ee5\u4eceEPI\u57fa\u56e0\u7ec4\u5e93\u76f4\u63a5\u83b7\u53d6\uff0c\u4e5f\u53ef\u76f4\u63a5\u4e0b\u8f7d\u3002 CpG Island\u4fa7\u7ffc\u7684\u793a\u610f\u56fe\u5982\u4e0b\uff1a |\u2014\u2014N Shelf(2kb)\u2014\u2014|\u2014N Shore(2kb)\u2014|\u2014\u2014 CpG Island \u2014\u2014|\u2014S Shore(2kb)\u2014|\u2014\u2014S Shelf(2kb)\u2014\u2014| \u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e** python3 CpG_island_classification.py -h usage: CpG_island_classification.py [-h] --input_BED INPUT_BED --outdir OUTDIR [--CpG_shore {yes,no}] [--CpG_shelf {yes,no}] --chrlist CHRLIST optional arguments: -h, --help show this help message and exit --input_BED INPUT_BED input BED file of ori CGI bed --outdir OUTDIR out dir --CpG_shore {yes,no} whether to select CpG Shore or not --CpG_shelf {yes,no} whether to select CpG Shelf or not --chrlist CHRLIST input chrlist list, including chr ID and chr length \u53c2\u6570\u8bf4\u660e --input_BED \u8f93\u5165\u7684CpG island\u6587\u4ef6\uff0c3\u5217BED\u683c\u5f0f --outdir \u6587\u4ef6\u8f93\u51fa\u8def\u5f84 --CpG_shore \u662f\u5426\u8f93\u51faCpG shore\u4fe1\u606f --CpG_shelf \u662f\u5426\u8f93\u51faCpG shelf\u4fe1\u606f --chrlist \u5305\u542b\u67d3\u8272\u4f53\u540d\u79f0\u548c\u957f\u5ea6\u4fe1\u606f\u76842\u5217\u6587\u4ef6 \u7ed3\u679c\u793a\u4f8b\u4e0e\u89e3\u8bfb \u8f93\u51fa\u6587\u4ef6\u5305\u542b\uff1a CpG_flanking.bed \u6574\u5408CpG Island\u3001Shore\u3001Shelf\u4fe1\u606f\u7684\u6587\u4ef6 CpG_Island.bed CpG Island\u6587\u4ef6 CpG_Shelf.bed CpG Shore\u6587\u4ef6 CpG_Shore.bed CpG Shelf\u6587\u4ef6 \u4ee5CpG_flanking\u4e3a\u4f8b\u5b50\uff0c\u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a NC_000067.6 3527624 3529624 NC_000067.6:3527624:3529624|Shelf + NC_000067.6 3529624 3531624 NC_000067.6:3529624:3531624|Shore + NC_000067.6 3531624 3531843 NC_000067.6:3531624:3531843|CGI + NC_000067.6 3531843 3533843 NC_000067.6:3531843:3533843|Shore + NC_000067.6 3533843 3535843 NC_000067.6:3533843:3535843|Shelf + \u7b2c1\u5217\uff1a\u67d3\u8272\u4f53/Scaffold\u540d\u79f0 \u7b2c2\u5217\uff1a\u533a\u57df\u7684\u8d77\u59cb\u4f4d\u7f6e \u7b2c3\u5217\uff1a\u533a\u57df\u7684\u7ec8\u6b62\u4f4d\u7f6e \u7b2c4\u5217\uff1a\u533a\u57df\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u542b\u5750\u6807\u548c\u533a\u57df\u7c7b\u578b \u7b2c5\u5217\uff1aCpG Island\u672c\u8eab\u4e0d\u533a\u5206\u6b63\u8d1f\u94fe\uff0c\u7edf\u4e00\u4f7f\u7528\u6b63\u94fe","title":"CpG island"},{"location":"CpG_island_classification/#_1","text":"\u57fa\u4e8e\u7ed9\u5b9a\u7684CpG Island\u6587\u4ef6\uff0c\u63d0\u53d6CpG island\u4fa7\u7ffc\u7684\u533a\u57df\uff0c\u8bf8\u5982CpG Shore\u3001CpG Shelf\u533a\u57df\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002 CpG Island\u6587\u4ef6\u53ef\u4ee5\u4eceEPI\u57fa\u56e0\u7ec4\u5e93\u76f4\u63a5\u83b7\u53d6\uff0c\u4e5f\u53ef\u76f4\u63a5\u4e0b\u8f7d\u3002 CpG Island\u4fa7\u7ffc\u7684\u793a\u610f\u56fe\u5982\u4e0b\uff1a |\u2014\u2014N Shelf(2kb)\u2014\u2014|\u2014N Shore(2kb)\u2014|\u2014\u2014 CpG Island \u2014\u2014|\u2014S Shore(2kb)\u2014|\u2014\u2014S Shelf(2kb)\u2014\u2014|","title":"\u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e"},{"location":"CpG_island_classification/#_2","text":"python3 CpG_island_classification.py -h usage: CpG_island_classification.py [-h] --input_BED INPUT_BED --outdir OUTDIR [--CpG_shore {yes,no}] [--CpG_shelf {yes,no}] --chrlist CHRLIST optional arguments: -h, --help show this help message and exit --input_BED INPUT_BED input BED file of ori CGI bed --outdir OUTDIR out dir --CpG_shore {yes,no} whether to select CpG Shore or not --CpG_shelf {yes,no} whether to select CpG Shelf or not --chrlist CHRLIST input chrlist list, including chr ID and chr length","title":"\u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e**"},{"location":"CpG_island_classification/#_3","text":"--input_BED \u8f93\u5165\u7684CpG island\u6587\u4ef6\uff0c3\u5217BED\u683c\u5f0f --outdir \u6587\u4ef6\u8f93\u51fa\u8def\u5f84 --CpG_shore \u662f\u5426\u8f93\u51faCpG shore\u4fe1\u606f --CpG_shelf \u662f\u5426\u8f93\u51faCpG shelf\u4fe1\u606f --chrlist \u5305\u542b\u67d3\u8272\u4f53\u540d\u79f0\u548c\u957f\u5ea6\u4fe1\u606f\u76842\u5217\u6587\u4ef6","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"CpG_island_classification/#_4","text":"\u8f93\u51fa\u6587\u4ef6\u5305\u542b\uff1a CpG_flanking.bed \u6574\u5408CpG Island\u3001Shore\u3001Shelf\u4fe1\u606f\u7684\u6587\u4ef6 CpG_Island.bed CpG Island\u6587\u4ef6 CpG_Shelf.bed CpG Shore\u6587\u4ef6 CpG_Shore.bed CpG Shelf\u6587\u4ef6 \u4ee5CpG_flanking\u4e3a\u4f8b\u5b50\uff0c\u5404\u5217\u4fe1\u606f\u5982\u4e0b\uff1a NC_000067.6 3527624 3529624 NC_000067.6:3527624:3529624|Shelf + NC_000067.6 3529624 3531624 NC_000067.6:3529624:3531624|Shore + NC_000067.6 3531624 3531843 NC_000067.6:3531624:3531843|CGI + NC_000067.6 3531843 3533843 NC_000067.6:3531843:3533843|Shore + NC_000067.6 3533843 3535843 NC_000067.6:3533843:3535843|Shelf + \u7b2c1\u5217\uff1a\u67d3\u8272\u4f53/Scaffold\u540d\u79f0 \u7b2c2\u5217\uff1a\u533a\u57df\u7684\u8d77\u59cb\u4f4d\u7f6e \u7b2c3\u5217\uff1a\u533a\u57df\u7684\u7ec8\u6b62\u4f4d\u7f6e \u7b2c4\u5217\uff1a\u533a\u57df\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u542b\u5750\u6807\u548c\u533a\u57df\u7c7b\u578b \u7b2c5\u5217\uff1aCpG Island\u672c\u8eab\u4e0d\u533a\u5206\u6b63\u8d1f\u94fe\uff0c\u7edf\u4e00\u4f7f\u7528\u6b63\u94fe","title":"\u7ed3\u679c\u793a\u4f8b\u4e0e\u89e3\u8bfb"},{"location":"PMD/","text":"Title: methy_Haplo Date: 2019-03-01 Category: methyl Tags: methyl, PMD Author: shaohuaihan Summary: \u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e \u57fa\u4e8ebisulfite\u6d4b\u5e8f\u6bd4\u5bf9\u6570\u636e\uff08\u5df2\u53bb\u9664duplicate\u548cunmap\u6570\u636e\uff09\uff0c\u501f\u52a9HMM\u6a21\u578b\u5728\u5168\u57fa\u56e0\u7ec4\u8303\u56f4\u5185\u5bfb\u627e partially methylated domains (PMD\uff09\u3002 \u4e3a\u4e86\u786e\u5b9a\u662f\u5426\u5b58\u5728PMDs\uff0c\u9996\u5148\u8ba1\u7b97\u4e00\u4e2a\u6240\u9009\u62e9\u7684\u67d3\u8272\u4f53\u7684\u03b1-value\u5206\u5e03\uff0c\u03b1\u662f\u6ed1\u52a8\u7a97\u53e3\uff08\u5305\u542b100\u4e2a\u8fde\u7eed\u7684CpGs\uff09\u7684\u7532\u57fa\u5316\u6c34\u5e73\u7684\u5206\u5e03\u3002\u03b1-value\u5c0f\u4e8e1\u5219\u53cd\u6620\u51fa\u4e00\u4e2a\u6563\u5c04\u7684\u5206\u5e03\uff0c\u504f\u5411\u4f4e\u548c\u9ad8\u7532\u57fa\u5316\u6c34\u5e73\u5206\u5e03\uff1b\u5927\u4e8e\u7b49\u4e8e1\u65f6\u5206\u5e03\u5747\u5300\uff0c\u503e\u5411\u4e8e\u4e2d\u95f4\u7532\u57fa\u5316\u6c34\u5e73\u5206\u5e03\u72b6\u6001\uff0c\u5373PMDs\u3002 PMDs\u7684\u5bfb\u627e\u53ef\u4ee5\u4f7f\u7528R\u5305MethylSeekR\u5b9e\u73b0\u3002 \u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e $python generate_PMD.py -h usage: generate_PMD.py [-h] -d DIR -m METHY -s SNV -c CHR -g GENOME -de DEPTH generate PMD R script optional arguments: -h, --help show this help message and exit -d DIR, --dir DIR work dir \u5de5\u4f5c\u8def\u5f84 -m METHY, --methy METHY DNA\u7532\u57fa\u5316CX_report\u6587\u4ef6 methyl file -s SNV, --snv SNV snv file SNP\u6587\u4ef6\uff0c\u7528\u4e8e\u8fc7\u6ee4SNP-cytosine\u51b2\u7a81\u7ed3\u679c -c CHR, --chr CHR chr name \u6240\u5206\u6790\u7684\u67d3\u8272\u4f53\u540d\u79f0 -g GENOME, --genome GENOME \u53c2\u8003\u57fa\u56e0\u7ec4\u7248\u672c genome version -de DEPTH, --depth DEPTH cytosine\u7684\u6df1\u5ea6 depth \u5176\u4e2d\uff1a -g \u53c2\u6570\u4e3a\u5185\u7f6e\u7684\u57fa\u56e0\u7ec4\u7248\u672c\u4fe1\u606f\uff08\u4e0b\u8ff0\u6587\u4ef6\u6700\u540e\u4e00\u5217\uff09\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a #ID latin genome_version BSgenome.Drerio.UCSC.danRer10 Drerio danRer10 BSgenome.Hsapiens.1000genomes.hs37d5 Hsapiens hs37d5 BSgenome.Hsapiens.NCBI.GRCh38 Hsapiens GRCh38 BSgenome.Hsapiens.UCSC.hg19 Hsapiens hg19 BSgenome.Hsapiens.UCSC.hg38 Hsapiens hg38 BSgenome.Mmusculus.UCSC.mm10 Mmusculus mm10 \u53c2\u6570\u8bf4\u660e -d \u5de5\u4f5c\u8def\u5f84 -m DNA\u7532\u57fa\u5316CX_report\u6587\u4ef6\uff0cgz\u538b\u7f29\u683c\u5f0f -s SNP\u6587\u4ef6\uff0c\u7528\u4e8e\u8fc7\u6ee4SNP-cytosine\u51b2\u7a81\u7ed3\u679c -c \u6240\u5206\u6790\u7684\u67d3\u8272\u4f53\u540d\u79f0 -g \u53c2\u8003\u57fa\u56e0\u7ec4\u7248\u672c\uff0c\u89c1genome.ini -de cytosine\u7684\u7b5b\u9009\u6df1\u5ea6\uff0c\u9ed8\u8ba45x \u4f7f\u7528\u793a\u4f8b export LD_LIBRARY_PATH=/opt/glibc-2.14/lib:$LD_LIBRARY_PATH python generate_PMD.py -d $PWD -m test.CX_report.txt.gz -s snv.txt -c chr10 -g hg19 -de 5 Resource http://www.bioconductor.org/packages/release/bioc/vignettes/MethylSeekR/inst/doc/MethylSeekR.pdf","title":"PMD"},{"location":"PMD/#_1","text":"\u57fa\u4e8ebisulfite\u6d4b\u5e8f\u6bd4\u5bf9\u6570\u636e\uff08\u5df2\u53bb\u9664duplicate\u548cunmap\u6570\u636e\uff09\uff0c\u501f\u52a9HMM\u6a21\u578b\u5728\u5168\u57fa\u56e0\u7ec4\u8303\u56f4\u5185\u5bfb\u627e partially methylated domains (PMD\uff09\u3002 \u4e3a\u4e86\u786e\u5b9a\u662f\u5426\u5b58\u5728PMDs\uff0c\u9996\u5148\u8ba1\u7b97\u4e00\u4e2a\u6240\u9009\u62e9\u7684\u67d3\u8272\u4f53\u7684\u03b1-value\u5206\u5e03\uff0c\u03b1\u662f\u6ed1\u52a8\u7a97\u53e3\uff08\u5305\u542b100\u4e2a\u8fde\u7eed\u7684CpGs\uff09\u7684\u7532\u57fa\u5316\u6c34\u5e73\u7684\u5206\u5e03\u3002\u03b1-value\u5c0f\u4e8e1\u5219\u53cd\u6620\u51fa\u4e00\u4e2a\u6563\u5c04\u7684\u5206\u5e03\uff0c\u504f\u5411\u4f4e\u548c\u9ad8\u7532\u57fa\u5316\u6c34\u5e73\u5206\u5e03\uff1b\u5927\u4e8e\u7b49\u4e8e1\u65f6\u5206\u5e03\u5747\u5300\uff0c\u503e\u5411\u4e8e\u4e2d\u95f4\u7532\u57fa\u5316\u6c34\u5e73\u5206\u5e03\u72b6\u6001\uff0c\u5373PMDs\u3002 PMDs\u7684\u5bfb\u627e\u53ef\u4ee5\u4f7f\u7528R\u5305MethylSeekR\u5b9e\u73b0\u3002","title":"\u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e"},{"location":"PMD/#_2","text":"$python generate_PMD.py -h usage: generate_PMD.py [-h] -d DIR -m METHY -s SNV -c CHR -g GENOME -de DEPTH generate PMD R script optional arguments: -h, --help show this help message and exit -d DIR, --dir DIR work dir \u5de5\u4f5c\u8def\u5f84 -m METHY, --methy METHY DNA\u7532\u57fa\u5316CX_report\u6587\u4ef6 methyl file -s SNV, --snv SNV snv file SNP\u6587\u4ef6\uff0c\u7528\u4e8e\u8fc7\u6ee4SNP-cytosine\u51b2\u7a81\u7ed3\u679c -c CHR, --chr CHR chr name \u6240\u5206\u6790\u7684\u67d3\u8272\u4f53\u540d\u79f0 -g GENOME, --genome GENOME \u53c2\u8003\u57fa\u56e0\u7ec4\u7248\u672c genome version -de DEPTH, --depth DEPTH cytosine\u7684\u6df1\u5ea6 depth \u5176\u4e2d\uff1a -g \u53c2\u6570\u4e3a\u5185\u7f6e\u7684\u57fa\u56e0\u7ec4\u7248\u672c\u4fe1\u606f\uff08\u4e0b\u8ff0\u6587\u4ef6\u6700\u540e\u4e00\u5217\uff09\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a #ID latin genome_version BSgenome.Drerio.UCSC.danRer10 Drerio danRer10 BSgenome.Hsapiens.1000genomes.hs37d5 Hsapiens hs37d5 BSgenome.Hsapiens.NCBI.GRCh38 Hsapiens GRCh38 BSgenome.Hsapiens.UCSC.hg19 Hsapiens hg19 BSgenome.Hsapiens.UCSC.hg38 Hsapiens hg38 BSgenome.Mmusculus.UCSC.mm10 Mmusculus mm10","title":"\u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e"},{"location":"PMD/#_3","text":"-d \u5de5\u4f5c\u8def\u5f84 -m DNA\u7532\u57fa\u5316CX_report\u6587\u4ef6\uff0cgz\u538b\u7f29\u683c\u5f0f -s SNP\u6587\u4ef6\uff0c\u7528\u4e8e\u8fc7\u6ee4SNP-cytosine\u51b2\u7a81\u7ed3\u679c -c \u6240\u5206\u6790\u7684\u67d3\u8272\u4f53\u540d\u79f0 -g \u53c2\u8003\u57fa\u56e0\u7ec4\u7248\u672c\uff0c\u89c1genome.ini -de cytosine\u7684\u7b5b\u9009\u6df1\u5ea6\uff0c\u9ed8\u8ba45x","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"PMD/#_4","text":"export LD_LIBRARY_PATH=/opt/glibc-2.14/lib:$LD_LIBRARY_PATH python generate_PMD.py -d $PWD -m test.CX_report.txt.gz -s snv.txt -c chr10 -g hg19 -de 5","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"PMD/#resource","text":"http://www.bioconductor.org/packages/release/bioc/vignettes/MethylSeekR/inst/doc/MethylSeekR.pdf","title":"Resource"},{"location":"clusterProfiler/","text":"clusterProfiler \u521d\u6d4b clusterProfiler \u662f\u4e00\u4e2a\u57fa\u4e8e\u57fa\u56e0\u3001\u57fa\u56e0\u96c6\u7684\u96c6\u7edf\u8ba1\u5206\u6790\u548c\u53ef\u89c6\u5316\u7684R\u5305\uff0c\u652f\u6301\u591a\u79cdover-representation\u68c0\u9a8c\u548c\u57fa\u56e0\u672c\u4f53\u5bcc\u96c6\u5206\u6790\uff0c\u53ef\u8fdb\u884c\u5206\u6790\u5982\uff1aGene Ontology\u3001EGG Pathway\u3001MeSH \u3001Reactome Pathway\u3001DAVID \u3001Disease Ontology\u7b49\u3002 R\u5305\u8bf4\u660e\u6587\u6863\u53c2\u8003\uff1a \u3010\u529f\u80fd\u6982\u8981\u3011 https://guangchuangyu.github.io/software/clusterProfiler/ \u3010\u4f7f\u7528\u8bf4\u660e\u3011 https://guangchuangyu.github.io/2016/01/go-analysis-using-clusterprofiler/ \u3010\u4f7f\u7528\u624b\u518c\u3011https://yulab-smu.github.io/clusterProfiler-book/chapter1.html,\uff0c\u5f88\u8be6\u7ec6 \u3010\u53c2\u8003\u6587\u732e\u3011 Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287. Gene Ontology\u5bcc\u96c6\u5206\u6790\uff1a clusterProfiler\u63d0\u4f9b\u4f7f\u7528\u7269\u79cd\u7684 OrgDb \u5bf9\u8c61\u6765\u8fdb\u884c\u5bcc\u96c6\u5206\u6790\uff0cBioconductor\u5b98\u7f51\u5df2\u7ecf\u63d0\u4f9b\u4e86\u591a\u8fbe20\u4e2a\u7269\u79cd\u7684OrgDb\u5bf9\u8c61\u6587\u4ef6\uff1b\u5f53\u7136\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528 AnnotationHub \uff08\u8be5\u57fa\u4e8eR 3.6\u6784\u5efa\uff09\u5305\u6765\u81ea\u5b9a\u4e49\u6784\u5efaOrgDb\u5bf9\u8c61\u3002 Bioconductor OrgDb\uff1a OrgDb 1. \u5982\u4f55\u4f7f\u7528 1.1 \u57fa\u4e8e\u5df2\u6709\u7684 OrgDb \u5bf9\u8c61\u8fdb\u884cGO\u5bcc\u96c6\u5206\u6790 \u4f7f\u7528clusterProfiler\u9700\u8981\u63d0\u524d\u505a\u7684\u662f\u5b89\u88c5\u76f8\u5e94\u7269\u79cd\u7684OrgDb\u5305\uff0c\u8fd9\u4e00\u70b9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4f7f\u7528 BiocManager::install(\"\u5305\") \u8fdb\u884c\u5b89\u88c5\u3002 clusterProfiler\u6240\u4f7f\u7528\u7684OrgDb\u652f\u6301\u591a\u79cd\u57fa\u56e0ID\u7c7b\u578b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528SYMBOL\u7c7b\u578b\u3002 \u9700\u8981\u5b89\u88c5\u7684\u5305\u6709\uff1a clusterProfiler \u3001 AnnotationHub \uff08\u81ea\u5efa\u5e93\uff09\u3001 topGO \uff08DAG\u5206\u6790\uff09 clusterProfiler\u7248\u672c\uff1a 3.12.0 \u5bcc\u96c6\u5206\u6790\u7531 enrichGO \u6a21\u5757\u529f\u80fd\u6765\u5b9e\u73b0\uff1a enrichGO GO Enrichment Analysis of a gene set. Given a vector of genes, this function will return the enrichment GO categories after FDR control. Usage: enrichGO(gene, OrgDb, keyType = \"ENTREZID\", ont = \"MF\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, qvalueCutoff = 0.2, minGSSize = 10, maxGSSize = 500, readable = FALSE, pool = FALSE) Arguments: gene a vector of entrez gene id. OrgDb OrgDb keyType keytype of input gene ont One of \"MF\", \"BP\", and \"CC\" subontologies or 'ALL'. pvalueCutoff Cutoff value of pvalue. pAdjustMethod one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe background genes qvalueCutoff qvalue cutoff minGSSize minimal size of genes annotated by Ontology term for testing. maxGSSize maximal size of genes annotated for testing readable whether mapping gene ID to gene Name pool If ont=\u2019ALL\u2019, whether pool 3 GO sub-ontologies \u64cd\u4f5c\u5b9e\u4f8b \uff1a #\u8f7d\u5165Hs\u5305\uff1aGenome wide annotation for Human > library(org.Hs.eg.db) # \u770b\u770bDb\u5e93\u4e2d\u5305\u542b\u54ea\u4e9b\u5185\u5bb9 > keytypes(org.Hs.eg.db) [1] \"ACCNUM\" \"ALIAS\" \"ENSEMBL\" \"ENSEMBLPROT\" \"ENSEMBLTRANS\" [6] \"ENTREZID\" \"ENZYME\" \"EVIDENCE\" \"EVIDENCEALL\" \"GENENAME\" [11] \"GO\" \"GOALL\" \"IPI\" \"MAP\" \"OMIM\" [16] \"ONTOLOGY\" \"ONTOLOGYALL\" \"PATH\" \"PFAM\" \"PMID\" [21] \"PROSITE\" \"REFSEQ\" \"SYMBOL\" \"UCSCKG\" \"UNIGENE\" [26] \"UNIPROT\" # \u9020\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u5217\u8868\uff0c\u5185\u5bb9\u4e3aENSEMBL\u57fa\u56e0ID > DATA <- read.delim(\"geneList.txt\", sep=\"\\n\", header=F) > head(DATA) V1 1 ENSG00000196611 2 ENSG00000093009 3 ENSG00000109255 4 ENSG00000134690 5 ENSG00000065328 6 ENSG00000117399 > gene1 <- c(t(DATA)) > gene1 [1] \"ENSG00000196611\" \"ENSG00000093009\" \"ENSG00000109255\" \"ENSG00000134690\" [5] \"ENSG00000065328\" \"ENSG00000117399\" #\u901a\u8fc7ensembl\u7684\u57fa\u56e0ID\u53f7\u53ef\u4ee5\u627e\u5230Db\u6587\u4ef6\u4e2d\u5176\u4ed6\u4fe1\u606f\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4f8b\u5982\uff1a > cols <- c(\"SYMBOL\", \"GENENAME\") # \u4f7f\u7528select\u51fd\u6570\u8bfb\u53d6gene1\u5728Db\u6587\u4ef6\u4e2d\u7684\u5bf9\u5e94\u4fe1\u606f > select(org.Hs.eg.db, keys=gene1, columns=cols, keytype=\"ENSEMBL\") 'select()' returned 1:1 mapping between keys and columns ENSEMBL SYMBOL 1 ENSG00000196611 MMP1 2 ENSG00000093009 CDC45 3 ENSG00000109255 NMU 4 ENSG00000134690 CDCA8 5 ENSG00000065328 MCM10 6 ENSG00000117399 CDC20 GENENAME 1 matrix metallopeptidase 1 2 cell division cycle 45 3 neuromedin U 4 cell division cycle associated 8 5 minichromosome maintenance 10 replication initiation factor 6 cell division cycle 20 #\u518d\u4f8b\u5982\u68c0\u7d22SOX1\u57fa\u56e0\uff0c\u4ee5SYMBOL\u57fa\u56e0\u4e3a\u5c5e\u6027 > select(org.Hs.eg.db, keys=\"SOX1\", columns=c(\"ENSEMBL\",\"ENTREZID\",\"GO\",\"GENENAME\"), keytype=\"SYMBOL\") 'select()' returned 1:many mapping between keys and columns SYMBOL ENSEMBL ENTREZID GO EVIDENCE ONTOLOGY GENENAME 1 SOX1 ENSG00000182968 6656 GO:0000978 IDA MF SRY-box 1 2 SOX1 ENSG00000182968 6656 GO:0000981 ISA MF SRY-box 1 3 SOX1 ENSG00000182968 6656 GO:0000981 ISM MF SRY-box 1 4 SOX1 ENSG00000182968 6656 GO:0000981 NAS MF SRY-box 1 5 SOX1 ENSG00000182968 6656 GO:0001228 IEA MF SRY-box 1 ... ... # \u6b64\u5916\uff0c\u63d0\u4f9bbitr\u65b9\u6cd5\u8fdb\u884c\u6570\u636eID\u7684\u8f6c\u6362 # \u4f8b\u5982\uff0c\u4eceENSEMBL\u7f16\u53f7\u8f6c\u6362\u4e3aENTREZID\u7f16\u53f7\uff0c\u4f46\u90fd\u662f\u57fa\u4e8e\u6570\u636e\u5e93\u8bb0\u5f55\u7684\u4fe1\u606f bitr(gene1, fromType=\"ENSEMBL\", toType=c(\"ENTREZID\",\"SYMBOL\"), OrgDb=\"org.Hs.eg.db\") 1 ENSG00000120784 22835 ZFP30 2 ENSG00000120798 7181 NR2C1 ... ... Warning message: In bitr(gene1, fromType = \"ENSEMBL\", toType = c(\"ENTREZID\", \"SYMBOL\"), : 0.62% of input gene IDs are fail to map... # \u6240\u4ee5\uff0cclusterProfiler\u57fa\u4e8e\u4e0a\u8ff0\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u6839\u636e\u4efb\u610f\u7684\u83b7\u53d6\u57fa\u56e0\u201cID\u201d\u548c\u591a\u79cd\u6ce8\u91ca\u4fe1\u606f # keytype\u652f\u6301ENSEMBL\u3001SYMBOL\u3001ENTREZID # \u57fa\u4e8egene1\u5217\u8868\u8c03\u53d6Db\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f > gene.df <- select(org.Hs.eg.db, keys=gene1, columns=c(\"ENTREZID\", \"ENSEMBL\", \"SYMBOL\"), keytype=\"ENSEMBL\") > head(gene.df) ENSEMBL ENTREZID SYMBOL 1 ENSG00000196611 4312 MMP1 2 ENSG00000093009 8318 CDC45 3 ENSG00000109255 10874 NMU 4 ENSG00000134690 55143 CDCA8 5 ENSG00000065328 55388 MCM10 6 ENSG00000117399 991 CDC20 # \u8f7d\u5165\u5305 > library(clusterProfiler) # \u5bf9\u7ec6\u80de\u7ec4\u5206\u5927\u7c7bCC\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 > go <- enrichGO(gene=gene.df$ENSEMBL, OrgDb=org.Hs.eg.db, keyType='ENSEMBL', ont=\"CC\", pAdjustMethod=\"BH\", pvalueCutoff=0.01, qvalueCutoff=0.05) # ont\u4e5f\u53ef\u8bbe\u7f6e'ALL'\uff0c\u5373\u5bf9BP\uff0cCC\u548cMF\u8fdb\u884c\u6574\u4f53\u5206\u6790\uff0c\u800c\u4e0d\u662f\u5355\u72ec\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 # \u5982\u679c\u57fa\u56e0\u6570\u76ee\u5c11\uff0c\u65e0\u5bcc\u96c6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c > go # # over-representation test # #...@organism Homo sapiens #...@ontology CC #...@keytype ENSEMBL #...@gene chr [1:6] \"ENSG00000196611\" \"ENSG00000093009\" \"ENSG00000109255\" ... #...pvalues adjusted by 'BH' with cutoff <0.01 #...0 enriched terms found # \u82e5\u6709\u5bcc\u96c6\u5219\u663e\u793a\u4ee5\u4e0b\u7ed3\u679c\uff1a > go # # over-representation test # #...@organism Homo sapiens #...@ontology CC #...@keytype ENSEMBL #...@gene chr [1:5000] \"ENSG00000000003\" \"ENSG00000000005\" \"ENSG00000000419\" ... #...pvalues adjusted by 'BH' with cutoff <0.01 #...83 enriched terms found 'data.frame': 83 obs. of 9 variables: $ ID : chr \"GO:0015629\" \"GO:0005819\" \"GO:0099568\" \"GO:0098793\" ... $ Description: chr \"actin cytoskeleton\" \"spindle\" \"cytoplasmic region\" \"presynapse\" ... $ GeneRatio : chr \"164/4726\" \"126/4726\" \"146/4726\" \"157/4726\" ... $ BgRatio : chr \"464/20630\" \"348/20630\" \"423/20630\" \"467/20630\" ... $ pvalue : num 5.63e-10 1.09e-08 2.83e-08 6.22e-08 1.88e-07 ... $ p.adjust : num 4.19e-07 4.05e-06 7.02e-06 1.16e-05 2.80e-05 ... $ qvalue : num 2.82e-07 2.73e-06 4.72e-06 7.79e-06 1.88e-05 ... $ geneID : chr \"ENSG00000000938/ENSG00000002834/ENSG00000005206/ENSG00000005471/ENSG00000006453/ENSG00000006747/ENSG00000006788\"| __truncated__ \"ENSG00000002822/ENSG00000004897/ENSG00000005022/ENSG00000007168/ENSG00000008323/ENSG00000010244/ENSG00000013573\"| __truncated__ \"ENSG00000002834/ENSG00000004939/ENSG00000006747/ENSG00000007168/ENSG00000007171/ENSG00000007174/ENSG00000007908\"| __truncated__ \"ENSG00000003147/ENSG00000005379/ENSG00000007516/ENSG00000008056/ENSG00000008282/ENSG00000011347/ENSG00000018236\"| __truncated__ ... $ Count : int 164 126 146 157 127 26 142 113 126 131 ... # GO\u5bcc\u96c6\u7edf\u8ba1\u5982\u4e0b\uff1a > summary(go) # \u6570\u636e\u8f93\u51fa data <- as.data.frame(go) write.table(data, file=\"go_enrich.xls\", row.names=F, sep=\"\\t\") 1.2 \u81ea\u5df1\u6784\u5efaDb\u6587\u4ef6 \u901a\u8fc7\u4f7f\u7528 AnnotationHub \u5305\u8fdb\u884c\u6784\u5efa What is AnnotationHub ? AnnotationHub is a new approach to providing annotation resources to the Bioconductor community. The initial plan is to make available fasta, GFF / GTF, BED, VCF, and similar files from entities such as Ensembl, UCSC, ENCODE, and 1000 Genomes projects as objects ready for work in Bioconductor, e.g., GRanges representations of BED files. # \u4f9d\u7167\u4f5c\u8005\u6d4b\u8bd5 library(AnnotationHub) hub <- AnnotationHub() # \u8be5\u6b65\u9aa4\u6d4b\u8bd5\u5931\u8d25\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\u95ee\u9898\uff1a #Error in .util_download(x, rid[i], proxy, config, \"bfcadd()\", ...) : # bfcadd() failed; see warnings() #In addition: Warning messages: #1: download failed # web resource path: #\u2018https://annotationhub.bioconductor.org/metadata/annotationhub.sqlite3\u2019 # local file path: \u2018/root/.cache/AnnotationHub/4272463205a1_annotationhub.sqlite3\u2019 # reason: An unknown option was passed in to libcurl #2: bfcadd() failed; resource removed # rid: BFC3 # fpath: \u2018https://annotationhub.bioconductor.org/metadata/annotationhub.sqlite3\u2019 # reason: download failed \u300b \u786e\u5b9e\u6709\u9047\u5230\u8fc7\u8be5\u95ee\u9898\uff1a \u624b\u52a8\u4e0b\u8f7d\uff0chttps://links.jianshu.com/go?to=https%3A%2F%2Fannotationhub.bioconductor.org%2Fmetadata%2Fannotationhub.sqlite3 # \u9009\u62e9\u4e00\u4e2a\u7269\u79cd query(hub, \"Cricetulus\") ## AnnotationHub with 4 records ## # snapshotDate(): 2015-12-29 ## # $dataprovider: UCSC, Inparanoid8, ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/ ## # $species: Cricetulus griseus ## # $rdataclass: ChainFile, Inparanoid8Db, OrgDb, TwoBitFile ## # additional mcols(): taxonomyid, genome, description, tags, ## # sourceurl, sourcetype ## # retrieve records with, e.g., 'object[[\"AH10393\"]]' ## ## title ## AH10393 | hom.Cricetulus_griseus.inp8.sqlite ## AH13980 | criGri1.2bit ## AH14346 | criGri1ToHg19.over.chain.gz ## AH48061 | org.Cricetulus_griseus.eg.sqlite # \u57fa\u4e8e\u5217\u51fa\u7684\u6587\u4ef6\u8fdb\u884c\u9009\u62e9 Cgriseus <- hub[[\"AH48061\"]] \u5173\u4e8eAnnotationHub\u4f7f\u7528\u53ef\u53c2\u8003\uff1a https://www.cnblogs.com/yatouhetademao/p/8018252.html 1.3 \u5bcc\u96c6\u7ed3\u679c\u53ef\u89c6\u5316 # \u6761\u5f62\u56fe barplot(go,showCategory=20,drop=T) # \u6563\u70b9\u56fe dotplot(go, showCategory=20) # \u8fd9\u6b65\u6d4b\u8bd5\u62a5\u9519\uff1a wrong orderBy parameter; set to default `orderBy = \"x\"` # DAG\u6709\u5411\u65e0\u73af\u56fe\u7ed8\u5236 # \u53ea\u80fd\u5355\u72ec\u5bf9BP\u3001CC\u6216MF\u8fdb\u884cDAG\u7ed8\u5236 plotGOgraph(go) # \u82e5go\u4e3a\u6574\u4f53\u5bcc\u96c6\uff0c\u5982\u4ec5\u5bf9BP\u7ec4\u5206\u7ed8\u5236DAG plotGOgraph(go.BP) \u6563\u70b9\u56fe\u793a\u610f\u56fe\uff1a 1.4 KEGG\u5bcc\u96c6\u5206\u6790 KEGG Enrichment Analysis of a gene set. Given a vector of genes, this function will return the enrichment KEGG categories with FDR control. Usage: enrichKEGG(gene, organism = \"hsa\", keyType = \"kegg\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, use_internal_data = FALSE) Arguments: gene a vector of entrez gene id. organism supported organism listed in \u2019http://www.genome.jp/kegg/catalog/org_list.html\u2019 keyType one of \"kegg\", \u2019ncbi-geneid\u2019, \u2019ncib-proteinid\u2019 and \u2019uniprot\u2019 pvalueCutoff Cutoff value of pvalue. pAdjustMethod one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe background genes minGSSize minimal size of genes annotated by Ontology term for testing. maxGSSize maximal size of genes annotated for testing qvalueCutoff qvalue cutoff use_internal_data logical, use KEGG.db or latest online KEGG data keyType\u652f\u6301kegg\u3001 ncbi-geneid\u3001ncib-proteinid\u548cuniprot enrichKEGG\u53ea\u652f\u6301entrez gene ID\uff0c\u8fd9\u4e00\u70b9\u6bd4\u8f83\u9ebb\u70e6 # \u6570\u636eID\u8f6c\u6362\u4e3aentrez \u7f16\u53f7 gene2 <- bitr(gene1, fromType=\"ENSEMBL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\") data <- gene2$ENTREZID # kegg <- enrichKEGG(data, organism = 'hsa', keyType = 'kegg', pvalueCutoff = 0.05, pAdjustMethod = 'BH', minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, use_internal_data = FALSE) # \u67e5\u770b\u6570\u636e\u5206\u6790\u7ed3\u679c head(kegg) ID Description GeneRatio hsa05165 hsa05165 Human papillomavirus infection 139/2395 hsa04010 hsa04010 MAPK signaling pathway 123/2395 hsa04120 hsa04120 Ubiquitin mediated proteolysis 64/2395 hsa04510 hsa04510 Focal adhesion 87/2395 hsa04141 hsa04141 Protein processing in endoplasmic reticulum 73/2395 hsa04668 hsa04668 TNF signaling pathway 53/2395 ~ BgRatio pvalue p.adjust qvalue geneID Count 330/7878 2.726058e-06 0.0008696126 0.0006628626 572/51384/... 139 295/7878 1.829656e-05 0.0029183006 0.0022244760 020/10368/... 123 137/7878 3.777734e-05 0.0032083090 0.0024455350 90293/996/... 64 199/7878 4.022958e-05 0.0032083090 0.0024455350 572/3675/... 87 165/7878 1.038498e-04 0.0059955161 0.0045700849 7095/51360/... 73 112/7878 1.127683e-04 0.0059955161 0.0045700849 843/8837/... 53 kegg\u5bcc\u96c6\u7b80\u5355\u53ef\u89c6\u5316\uff1a # \u6563\u70b9\u56fe dotplot(kegg, showCategory=30) 1.5 \u603b\u7ed3 clusterProfile\u4f7f\u7528\u7b80\u5355\uff0c\u529f\u80fd\u4e30\u5bcc\uff0cGO\u3001KEGG\u3001DAVID\u3001GSEA\u7b49\uff0c\u975e\u5e38\u9002\u5408\u5bf9\u57fa\u56e0/\u57fa\u56e0\u96c6\u8fdb\u884c\u529f\u80fd\u7814\u7a76\uff1b \u4f7f\u7528\u8be5\u5305\u9700\u8981\u514b\u670d\u7684\u95ee\u9898\u662f\u9700\u8981\u5efa\u5e93\uff0c\u6700\u597d\u5c0620\u79cd\u7269\u79cd\u548c\u751f\u50fb\u7269\u79cd\u6570\u636e\u6587\u4ef6\u672c\u5730\u5316\uff0c\u6240\u4ee5\u5173\u952e\u662f\u81ea\u5df1\u6784\u5efaOrgDb\uff1b \u4f5c\u8005\u4e00\u76f4\u5728\u7ef4\u62a4\u548c\u66f4\u65b0\uff0c\u4e0d\u65f6\u52a0\u5165\u65b0\u529f\u80fd\u548c\u6539\u8fdb\u3002 \u8865\u5145\uff1a\u975e\u6a21\u5f0f\u7269\u79cdclusterProfiler\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 \uff1a # \u8f7d\u5165\u5305 > library(clusterProfiler) # \u8bbe\u7f6e\u6211\u7684\u5de5\u4f5c\u8def\u5f84 > setwd(\"/home/shaohuaihan/bin/Iso-seq/image/R\") # \u8bfb\u53d6GO\u6ce8\u91ca\u6587\u4ef6 > go <- read.table(\"test_go_annot.txt\", sep=\"\\t\", quote=\"\") # \u67e5\u770bGO\u5e93\u6570\u636e\u683c\u5f0f > head(go) V1 V2 V3 V4 1 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene1 2 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene2 3 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene2 # \u5404\u5217\u5206\u522b\u662fGO term\uff0cGO sub term\uff0cGO top term\u548c\u57fa\u56e0ID # \u8bfb\u53d6\u5dee\u5f02\u57fa\u56e0\u5217\u8868 > gene <- read.table(\"test_gene.txt\") # \u67e5\u770b\u57fa\u56e0\u6570\u636e > head(gene) V1 1 gene100 2 gene200 3 gene300 # \u5904\u7406\u5dee\u5f02\u57fa\u56e0\u5217\u8868\uff0c\"data.frame\" \u2014> \"character\" > gene <- as.vector(gene$V1) # GO to gene\u6570\u636e\u6846 > go_term2gene <- data.frame(go$V1, go$V4) > head(go_term2gene) go.V1 go.V4 1 GO:0000015 gene10 2 GO:0000015 gene23 3 GO:0000015 gene32 # \u8868\u5934\u547d\u540d > names(go_term2gene) <- c(\"go_term\", \"gene\") # GO term to GO name\u6570\u636e\u6846 > go_term2name <- data.frame(go$V1, go$V2) > head(go_term2name) go.V1 go.V2 1 GO:0000015 phosphopyruvate_hydratase_complex 2 GO:0000015 phosphopyruvate_hydratase_complex 3 GO:0000015 phosphopyruvate_hydratase_complex # \u8868\u5934\u547d\u540d > names(go_term2name) <- c(\"go_term\", \"name\") # \u81f3\u6b64\uff0c\u5efa\u7acb\u4e86GO Term\u4e0e\u57fa\u56e0ID\u548c\u529f\u80fd\u7684\u5173\u7cfb # \u4f7f\u7528enrichr\u51fd\u6570\u8fdb\u884cGO\u5bcc\u96c6\u5206\u6790 > GO <- enricher(gene=gene, pvalueCutoff = 0.05, qvalueCutoff = 0.2, pAdjustMethod = \"BH\", TERM2GENE = go_term2gene, TERM2NAME = go_term2name) # \u67e5 \u770b \u7ed3 \u679c > GO # over-representation test # #...@organism UNKNOWN #...@ontology UNKNOWN #...@gene chr [1:774] \"Lal000100\" \"Lal001330\" \"Lal001430\" \"Lal001690\" \"Lal001990\" ... #...pvalues adjusted by 'BH' with cutoff <0.05 #...6 enriched terms found # \u7701\u7565\uff0c\u4e0e\u4e0a\u6587\u5bcc\u96c6\u5c55\u793a\u4e00\u6837 # \u6587\u4ef6\u8f93\u51fa > write.table(as.data.frame(GO), file=\"GO_enrichment.txt\", row.names = F, sep=\"\\t\") # \u8868\u5934\u5982\u4e0b\uff1a # ID Description GeneRatio BgRatio pvalue p.adjust qvalue geneID Count # \u53ef\u89c6\u5316 # \u6761\u5f62\u56fe > barplot(GO, showCategory=10) # \u6563\u70b9\u56fe > dotplot(GO) #\u8fd8\u662f\u62a5\u9519\uff1a wrong orderBy parameter;set to default `orderBy = \"x\"` ^_^! # ontology\u8ffd\u52a0\u7ec6\u80de\u7ec4\u5206\uff08CC) > GO@ontology = \"CC\" # \u6ce8\u610f\uff1a\u7531\u4e8e\u4e0d\u4f9d\u8d56\u4e8e\u8f6f\u7532\u7684OrgDb\u6570\u636e\u5e93\uff0cCC\uff0cMF\uff0cBP\u57fa\u56e0\u9700\u8981\u5355\u72ec\u53bb\u505a\u5bcc\u96c6\u5206\u6790 ### KEGG\u5957\u8def\u4e00\u6837 ### # \u8bfb\u53d6KEGG\u6ce8\u91ca\u6587\u4ef6 > kegg <- read.table(\"test_kegg_annot.txt\", sep=\"\\t\", quote=\"\") # \u67e5\u770b\u6570\u636e > head(kegg) V1 V2 V3 1 gene1 K15397 KCS 2 gene2 K01051 E3.1.1.11 3 gene3 K14508 NPR1 # \u540c\u7406 > kegg_term2gene <- data.frame(kegg$V2, kegg$V1) > kegg_term2name <- data.frame(kegg$V2, kegg$V3) > names(kegg_term2gene) <- c(\"ko_term\", \"gene\") > names(kegg_term2name) <- c(\"ko_term\", \"name\") # \u67e5\u770b\u6570\u636e > head(kegg_term2gene) ko_term gene 1 K15397 gene8 2 K01051 gen11 3 K14508 gene92 > head(kegg_term2name) ko_term name 1 K15397 KCS 2 K01051 E3.1.1.11 3 K14508 NPR1 # \u4f7f\u7528enrichr\u51fd\u6570\u8fdb\u884cKEGG\u7684\u5bcc\u96c6\u5206\u6790 > KEGG <- enricher(gene=gene, pvalueCutoff = 0.05, qvalueCutoff = 0.2, AdjustMethod = \"BH\", TERM2GENE = kegg_term2gene, TERM2NAME = kegg_term2name) # \u8f93\u51fa\u5230\u6587\u4ef6 > write.table(as.data.frame(KEGG), file=\"KEGG_enrichment.txt\", row.names = F, sep=\"\\t\") # \u8868\u5934\u4fe1\u606f\u5982\u4e0b # ID Description GeneRatio BgRatio pvalue p.adjust qvalue geneID Count # \u53ef\u89c6\u5316 > barplot(KEGG, showCategory=10) > dotplot(KEGG) # dev.off() \u5173\u4e8eenricher\u65b9\u6cd5 \uff1a enricher package:clusterProfiler R Documentation enricher Description: A universal enrichment analyzer Usage: enricher(gene, pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, TERM2GENE, TERM2NAME = NA) Arguments: gene: a vector of gene id pvalueCutoff: pvalue cutoff pAdjustMethod: one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe: background genes minGSSize: minimal size of genes annotated for testing maxGSSize: maximal size of genes annotated for testing qvalueCutoff: qvalue cutoff TERM2GENE: user input annotation of TERM TO GENE mapping, a data.frame of 2 column with term and gene TERM2NAME: user input of TERM TO NAME mapping, a data.frame of 2 column with term and name Value: A \u2018enrichResult\u2019 instance Author(s): Guangchuang Yu \u4e00\u4e2a\u901a\u7528\u7684\u8d85\u51e0\u4f55\u68c0\u7edf\u8ba1\u68c0\u9a8c\u65b9\u6cd5 \u200b 2019/07/23-24","title":"clusterProfile"},{"location":"clusterProfiler/#clusterprofiler","text":"clusterProfiler \u662f\u4e00\u4e2a\u57fa\u4e8e\u57fa\u56e0\u3001\u57fa\u56e0\u96c6\u7684\u96c6\u7edf\u8ba1\u5206\u6790\u548c\u53ef\u89c6\u5316\u7684R\u5305\uff0c\u652f\u6301\u591a\u79cdover-representation\u68c0\u9a8c\u548c\u57fa\u56e0\u672c\u4f53\u5bcc\u96c6\u5206\u6790\uff0c\u53ef\u8fdb\u884c\u5206\u6790\u5982\uff1aGene Ontology\u3001EGG Pathway\u3001MeSH \u3001Reactome Pathway\u3001DAVID \u3001Disease Ontology\u7b49\u3002 R\u5305\u8bf4\u660e\u6587\u6863\u53c2\u8003\uff1a \u3010\u529f\u80fd\u6982\u8981\u3011 https://guangchuangyu.github.io/software/clusterProfiler/ \u3010\u4f7f\u7528\u8bf4\u660e\u3011 https://guangchuangyu.github.io/2016/01/go-analysis-using-clusterprofiler/ \u3010\u4f7f\u7528\u624b\u518c\u3011https://yulab-smu.github.io/clusterProfiler-book/chapter1.html,\uff0c\u5f88\u8be6\u7ec6 \u3010\u53c2\u8003\u6587\u732e\u3011 Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.","title":"clusterProfiler\u521d\u6d4b"},{"location":"clusterProfiler/#gene-ontology","text":"clusterProfiler\u63d0\u4f9b\u4f7f\u7528\u7269\u79cd\u7684 OrgDb \u5bf9\u8c61\u6765\u8fdb\u884c\u5bcc\u96c6\u5206\u6790\uff0cBioconductor\u5b98\u7f51\u5df2\u7ecf\u63d0\u4f9b\u4e86\u591a\u8fbe20\u4e2a\u7269\u79cd\u7684OrgDb\u5bf9\u8c61\u6587\u4ef6\uff1b\u5f53\u7136\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528 AnnotationHub \uff08\u8be5\u57fa\u4e8eR 3.6\u6784\u5efa\uff09\u5305\u6765\u81ea\u5b9a\u4e49\u6784\u5efaOrgDb\u5bf9\u8c61\u3002 Bioconductor OrgDb\uff1a OrgDb","title":"Gene Ontology\u5bcc\u96c6\u5206\u6790\uff1a"},{"location":"clusterProfiler/#1","text":"","title":"1. \u5982\u4f55\u4f7f\u7528"},{"location":"clusterProfiler/#11-orgdbgo","text":"\u4f7f\u7528clusterProfiler\u9700\u8981\u63d0\u524d\u505a\u7684\u662f\u5b89\u88c5\u76f8\u5e94\u7269\u79cd\u7684OrgDb\u5305\uff0c\u8fd9\u4e00\u70b9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4f7f\u7528 BiocManager::install(\"\u5305\") \u8fdb\u884c\u5b89\u88c5\u3002 clusterProfiler\u6240\u4f7f\u7528\u7684OrgDb\u652f\u6301\u591a\u79cd\u57fa\u56e0ID\u7c7b\u578b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528SYMBOL\u7c7b\u578b\u3002 \u9700\u8981\u5b89\u88c5\u7684\u5305\u6709\uff1a clusterProfiler \u3001 AnnotationHub \uff08\u81ea\u5efa\u5e93\uff09\u3001 topGO \uff08DAG\u5206\u6790\uff09 clusterProfiler\u7248\u672c\uff1a 3.12.0 \u5bcc\u96c6\u5206\u6790\u7531 enrichGO \u6a21\u5757\u529f\u80fd\u6765\u5b9e\u73b0\uff1a enrichGO GO Enrichment Analysis of a gene set. Given a vector of genes, this function will return the enrichment GO categories after FDR control. Usage: enrichGO(gene, OrgDb, keyType = \"ENTREZID\", ont = \"MF\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, qvalueCutoff = 0.2, minGSSize = 10, maxGSSize = 500, readable = FALSE, pool = FALSE) Arguments: gene a vector of entrez gene id. OrgDb OrgDb keyType keytype of input gene ont One of \"MF\", \"BP\", and \"CC\" subontologies or 'ALL'. pvalueCutoff Cutoff value of pvalue. pAdjustMethod one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe background genes qvalueCutoff qvalue cutoff minGSSize minimal size of genes annotated by Ontology term for testing. maxGSSize maximal size of genes annotated for testing readable whether mapping gene ID to gene Name pool If ont=\u2019ALL\u2019, whether pool 3 GO sub-ontologies \u64cd\u4f5c\u5b9e\u4f8b \uff1a #\u8f7d\u5165Hs\u5305\uff1aGenome wide annotation for Human > library(org.Hs.eg.db) # \u770b\u770bDb\u5e93\u4e2d\u5305\u542b\u54ea\u4e9b\u5185\u5bb9 > keytypes(org.Hs.eg.db) [1] \"ACCNUM\" \"ALIAS\" \"ENSEMBL\" \"ENSEMBLPROT\" \"ENSEMBLTRANS\" [6] \"ENTREZID\" \"ENZYME\" \"EVIDENCE\" \"EVIDENCEALL\" \"GENENAME\" [11] \"GO\" \"GOALL\" \"IPI\" \"MAP\" \"OMIM\" [16] \"ONTOLOGY\" \"ONTOLOGYALL\" \"PATH\" \"PFAM\" \"PMID\" [21] \"PROSITE\" \"REFSEQ\" \"SYMBOL\" \"UCSCKG\" \"UNIGENE\" [26] \"UNIPROT\" # \u9020\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u5217\u8868\uff0c\u5185\u5bb9\u4e3aENSEMBL\u57fa\u56e0ID > DATA <- read.delim(\"geneList.txt\", sep=\"\\n\", header=F) > head(DATA) V1 1 ENSG00000196611 2 ENSG00000093009 3 ENSG00000109255 4 ENSG00000134690 5 ENSG00000065328 6 ENSG00000117399 > gene1 <- c(t(DATA)) > gene1 [1] \"ENSG00000196611\" \"ENSG00000093009\" \"ENSG00000109255\" \"ENSG00000134690\" [5] \"ENSG00000065328\" \"ENSG00000117399\" #\u901a\u8fc7ensembl\u7684\u57fa\u56e0ID\u53f7\u53ef\u4ee5\u627e\u5230Db\u6587\u4ef6\u4e2d\u5176\u4ed6\u4fe1\u606f\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4f8b\u5982\uff1a > cols <- c(\"SYMBOL\", \"GENENAME\") # \u4f7f\u7528select\u51fd\u6570\u8bfb\u53d6gene1\u5728Db\u6587\u4ef6\u4e2d\u7684\u5bf9\u5e94\u4fe1\u606f > select(org.Hs.eg.db, keys=gene1, columns=cols, keytype=\"ENSEMBL\") 'select()' returned 1:1 mapping between keys and columns ENSEMBL SYMBOL 1 ENSG00000196611 MMP1 2 ENSG00000093009 CDC45 3 ENSG00000109255 NMU 4 ENSG00000134690 CDCA8 5 ENSG00000065328 MCM10 6 ENSG00000117399 CDC20 GENENAME 1 matrix metallopeptidase 1 2 cell division cycle 45 3 neuromedin U 4 cell division cycle associated 8 5 minichromosome maintenance 10 replication initiation factor 6 cell division cycle 20 #\u518d\u4f8b\u5982\u68c0\u7d22SOX1\u57fa\u56e0\uff0c\u4ee5SYMBOL\u57fa\u56e0\u4e3a\u5c5e\u6027 > select(org.Hs.eg.db, keys=\"SOX1\", columns=c(\"ENSEMBL\",\"ENTREZID\",\"GO\",\"GENENAME\"), keytype=\"SYMBOL\") 'select()' returned 1:many mapping between keys and columns SYMBOL ENSEMBL ENTREZID GO EVIDENCE ONTOLOGY GENENAME 1 SOX1 ENSG00000182968 6656 GO:0000978 IDA MF SRY-box 1 2 SOX1 ENSG00000182968 6656 GO:0000981 ISA MF SRY-box 1 3 SOX1 ENSG00000182968 6656 GO:0000981 ISM MF SRY-box 1 4 SOX1 ENSG00000182968 6656 GO:0000981 NAS MF SRY-box 1 5 SOX1 ENSG00000182968 6656 GO:0001228 IEA MF SRY-box 1 ... ... # \u6b64\u5916\uff0c\u63d0\u4f9bbitr\u65b9\u6cd5\u8fdb\u884c\u6570\u636eID\u7684\u8f6c\u6362 # \u4f8b\u5982\uff0c\u4eceENSEMBL\u7f16\u53f7\u8f6c\u6362\u4e3aENTREZID\u7f16\u53f7\uff0c\u4f46\u90fd\u662f\u57fa\u4e8e\u6570\u636e\u5e93\u8bb0\u5f55\u7684\u4fe1\u606f bitr(gene1, fromType=\"ENSEMBL\", toType=c(\"ENTREZID\",\"SYMBOL\"), OrgDb=\"org.Hs.eg.db\") 1 ENSG00000120784 22835 ZFP30 2 ENSG00000120798 7181 NR2C1 ... ... Warning message: In bitr(gene1, fromType = \"ENSEMBL\", toType = c(\"ENTREZID\", \"SYMBOL\"), : 0.62% of input gene IDs are fail to map... # \u6240\u4ee5\uff0cclusterProfiler\u57fa\u4e8e\u4e0a\u8ff0\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u6839\u636e\u4efb\u610f\u7684\u83b7\u53d6\u57fa\u56e0\u201cID\u201d\u548c\u591a\u79cd\u6ce8\u91ca\u4fe1\u606f # keytype\u652f\u6301ENSEMBL\u3001SYMBOL\u3001ENTREZID # \u57fa\u4e8egene1\u5217\u8868\u8c03\u53d6Db\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f > gene.df <- select(org.Hs.eg.db, keys=gene1, columns=c(\"ENTREZID\", \"ENSEMBL\", \"SYMBOL\"), keytype=\"ENSEMBL\") > head(gene.df) ENSEMBL ENTREZID SYMBOL 1 ENSG00000196611 4312 MMP1 2 ENSG00000093009 8318 CDC45 3 ENSG00000109255 10874 NMU 4 ENSG00000134690 55143 CDCA8 5 ENSG00000065328 55388 MCM10 6 ENSG00000117399 991 CDC20 # \u8f7d\u5165\u5305 > library(clusterProfiler) # \u5bf9\u7ec6\u80de\u7ec4\u5206\u5927\u7c7bCC\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 > go <- enrichGO(gene=gene.df$ENSEMBL, OrgDb=org.Hs.eg.db, keyType='ENSEMBL', ont=\"CC\", pAdjustMethod=\"BH\", pvalueCutoff=0.01, qvalueCutoff=0.05) # ont\u4e5f\u53ef\u8bbe\u7f6e'ALL'\uff0c\u5373\u5bf9BP\uff0cCC\u548cMF\u8fdb\u884c\u6574\u4f53\u5206\u6790\uff0c\u800c\u4e0d\u662f\u5355\u72ec\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 # \u5982\u679c\u57fa\u56e0\u6570\u76ee\u5c11\uff0c\u65e0\u5bcc\u96c6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c > go # # over-representation test # #...@organism Homo sapiens #...@ontology CC #...@keytype ENSEMBL #...@gene chr [1:6] \"ENSG00000196611\" \"ENSG00000093009\" \"ENSG00000109255\" ... #...pvalues adjusted by 'BH' with cutoff <0.01 #...0 enriched terms found # \u82e5\u6709\u5bcc\u96c6\u5219\u663e\u793a\u4ee5\u4e0b\u7ed3\u679c\uff1a > go # # over-representation test # #...@organism Homo sapiens #...@ontology CC #...@keytype ENSEMBL #...@gene chr [1:5000] \"ENSG00000000003\" \"ENSG00000000005\" \"ENSG00000000419\" ... #...pvalues adjusted by 'BH' with cutoff <0.01 #...83 enriched terms found 'data.frame': 83 obs. of 9 variables: $ ID : chr \"GO:0015629\" \"GO:0005819\" \"GO:0099568\" \"GO:0098793\" ... $ Description: chr \"actin cytoskeleton\" \"spindle\" \"cytoplasmic region\" \"presynapse\" ... $ GeneRatio : chr \"164/4726\" \"126/4726\" \"146/4726\" \"157/4726\" ... $ BgRatio : chr \"464/20630\" \"348/20630\" \"423/20630\" \"467/20630\" ... $ pvalue : num 5.63e-10 1.09e-08 2.83e-08 6.22e-08 1.88e-07 ... $ p.adjust : num 4.19e-07 4.05e-06 7.02e-06 1.16e-05 2.80e-05 ... $ qvalue : num 2.82e-07 2.73e-06 4.72e-06 7.79e-06 1.88e-05 ... $ geneID : chr \"ENSG00000000938/ENSG00000002834/ENSG00000005206/ENSG00000005471/ENSG00000006453/ENSG00000006747/ENSG00000006788\"| __truncated__ \"ENSG00000002822/ENSG00000004897/ENSG00000005022/ENSG00000007168/ENSG00000008323/ENSG00000010244/ENSG00000013573\"| __truncated__ \"ENSG00000002834/ENSG00000004939/ENSG00000006747/ENSG00000007168/ENSG00000007171/ENSG00000007174/ENSG00000007908\"| __truncated__ \"ENSG00000003147/ENSG00000005379/ENSG00000007516/ENSG00000008056/ENSG00000008282/ENSG00000011347/ENSG00000018236\"| __truncated__ ... $ Count : int 164 126 146 157 127 26 142 113 126 131 ... # GO\u5bcc\u96c6\u7edf\u8ba1\u5982\u4e0b\uff1a > summary(go) # \u6570\u636e\u8f93\u51fa data <- as.data.frame(go) write.table(data, file=\"go_enrich.xls\", row.names=F, sep=\"\\t\")","title":"1.1 \u57fa\u4e8e\u5df2\u6709\u7684OrgDb\u5bf9\u8c61\u8fdb\u884cGO\u5bcc\u96c6\u5206\u6790"},{"location":"clusterProfiler/#12-db","text":"\u901a\u8fc7\u4f7f\u7528 AnnotationHub \u5305\u8fdb\u884c\u6784\u5efa What is AnnotationHub ? AnnotationHub is a new approach to providing annotation resources to the Bioconductor community. The initial plan is to make available fasta, GFF / GTF, BED, VCF, and similar files from entities such as Ensembl, UCSC, ENCODE, and 1000 Genomes projects as objects ready for work in Bioconductor, e.g., GRanges representations of BED files. # \u4f9d\u7167\u4f5c\u8005\u6d4b\u8bd5 library(AnnotationHub) hub <- AnnotationHub() # \u8be5\u6b65\u9aa4\u6d4b\u8bd5\u5931\u8d25\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\u95ee\u9898\uff1a #Error in .util_download(x, rid[i], proxy, config, \"bfcadd()\", ...) : # bfcadd() failed; see warnings() #In addition: Warning messages: #1: download failed # web resource path: #\u2018https://annotationhub.bioconductor.org/metadata/annotationhub.sqlite3\u2019 # local file path: \u2018/root/.cache/AnnotationHub/4272463205a1_annotationhub.sqlite3\u2019 # reason: An unknown option was passed in to libcurl #2: bfcadd() failed; resource removed # rid: BFC3 # fpath: \u2018https://annotationhub.bioconductor.org/metadata/annotationhub.sqlite3\u2019 # reason: download failed \u300b \u786e\u5b9e\u6709\u9047\u5230\u8fc7\u8be5\u95ee\u9898\uff1a \u624b\u52a8\u4e0b\u8f7d\uff0chttps://links.jianshu.com/go?to=https%3A%2F%2Fannotationhub.bioconductor.org%2Fmetadata%2Fannotationhub.sqlite3 # \u9009\u62e9\u4e00\u4e2a\u7269\u79cd query(hub, \"Cricetulus\") ## AnnotationHub with 4 records ## # snapshotDate(): 2015-12-29 ## # $dataprovider: UCSC, Inparanoid8, ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/ ## # $species: Cricetulus griseus ## # $rdataclass: ChainFile, Inparanoid8Db, OrgDb, TwoBitFile ## # additional mcols(): taxonomyid, genome, description, tags, ## # sourceurl, sourcetype ## # retrieve records with, e.g., 'object[[\"AH10393\"]]' ## ## title ## AH10393 | hom.Cricetulus_griseus.inp8.sqlite ## AH13980 | criGri1.2bit ## AH14346 | criGri1ToHg19.over.chain.gz ## AH48061 | org.Cricetulus_griseus.eg.sqlite # \u57fa\u4e8e\u5217\u51fa\u7684\u6587\u4ef6\u8fdb\u884c\u9009\u62e9 Cgriseus <- hub[[\"AH48061\"]] \u5173\u4e8eAnnotationHub\u4f7f\u7528\u53ef\u53c2\u8003\uff1a https://www.cnblogs.com/yatouhetademao/p/8018252.html","title":"1.2 \u81ea\u5df1\u6784\u5efaDb\u6587\u4ef6"},{"location":"clusterProfiler/#13","text":"# \u6761\u5f62\u56fe barplot(go,showCategory=20,drop=T) # \u6563\u70b9\u56fe dotplot(go, showCategory=20) # \u8fd9\u6b65\u6d4b\u8bd5\u62a5\u9519\uff1a wrong orderBy parameter; set to default `orderBy = \"x\"` # DAG\u6709\u5411\u65e0\u73af\u56fe\u7ed8\u5236 # \u53ea\u80fd\u5355\u72ec\u5bf9BP\u3001CC\u6216MF\u8fdb\u884cDAG\u7ed8\u5236 plotGOgraph(go) # \u82e5go\u4e3a\u6574\u4f53\u5bcc\u96c6\uff0c\u5982\u4ec5\u5bf9BP\u7ec4\u5206\u7ed8\u5236DAG plotGOgraph(go.BP) \u6563\u70b9\u56fe\u793a\u610f\u56fe\uff1a","title":"1.3 \u5bcc\u96c6\u7ed3\u679c\u53ef\u89c6\u5316"},{"location":"clusterProfiler/#14-kegg","text":"KEGG Enrichment Analysis of a gene set. Given a vector of genes, this function will return the enrichment KEGG categories with FDR control. Usage: enrichKEGG(gene, organism = \"hsa\", keyType = \"kegg\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, use_internal_data = FALSE) Arguments: gene a vector of entrez gene id. organism supported organism listed in \u2019http://www.genome.jp/kegg/catalog/org_list.html\u2019 keyType one of \"kegg\", \u2019ncbi-geneid\u2019, \u2019ncib-proteinid\u2019 and \u2019uniprot\u2019 pvalueCutoff Cutoff value of pvalue. pAdjustMethod one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe background genes minGSSize minimal size of genes annotated by Ontology term for testing. maxGSSize maximal size of genes annotated for testing qvalueCutoff qvalue cutoff use_internal_data logical, use KEGG.db or latest online KEGG data keyType\u652f\u6301kegg\u3001 ncbi-geneid\u3001ncib-proteinid\u548cuniprot enrichKEGG\u53ea\u652f\u6301entrez gene ID\uff0c\u8fd9\u4e00\u70b9\u6bd4\u8f83\u9ebb\u70e6 # \u6570\u636eID\u8f6c\u6362\u4e3aentrez \u7f16\u53f7 gene2 <- bitr(gene1, fromType=\"ENSEMBL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\") data <- gene2$ENTREZID # kegg <- enrichKEGG(data, organism = 'hsa', keyType = 'kegg', pvalueCutoff = 0.05, pAdjustMethod = 'BH', minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, use_internal_data = FALSE) # \u67e5\u770b\u6570\u636e\u5206\u6790\u7ed3\u679c head(kegg) ID Description GeneRatio hsa05165 hsa05165 Human papillomavirus infection 139/2395 hsa04010 hsa04010 MAPK signaling pathway 123/2395 hsa04120 hsa04120 Ubiquitin mediated proteolysis 64/2395 hsa04510 hsa04510 Focal adhesion 87/2395 hsa04141 hsa04141 Protein processing in endoplasmic reticulum 73/2395 hsa04668 hsa04668 TNF signaling pathway 53/2395 ~ BgRatio pvalue p.adjust qvalue geneID Count 330/7878 2.726058e-06 0.0008696126 0.0006628626 572/51384/... 139 295/7878 1.829656e-05 0.0029183006 0.0022244760 020/10368/... 123 137/7878 3.777734e-05 0.0032083090 0.0024455350 90293/996/... 64 199/7878 4.022958e-05 0.0032083090 0.0024455350 572/3675/... 87 165/7878 1.038498e-04 0.0059955161 0.0045700849 7095/51360/... 73 112/7878 1.127683e-04 0.0059955161 0.0045700849 843/8837/... 53 kegg\u5bcc\u96c6\u7b80\u5355\u53ef\u89c6\u5316\uff1a # \u6563\u70b9\u56fe dotplot(kegg, showCategory=30)","title":"1.4 KEGG\u5bcc\u96c6\u5206\u6790"},{"location":"clusterProfiler/#15","text":"clusterProfile\u4f7f\u7528\u7b80\u5355\uff0c\u529f\u80fd\u4e30\u5bcc\uff0cGO\u3001KEGG\u3001DAVID\u3001GSEA\u7b49\uff0c\u975e\u5e38\u9002\u5408\u5bf9\u57fa\u56e0/\u57fa\u56e0\u96c6\u8fdb\u884c\u529f\u80fd\u7814\u7a76\uff1b \u4f7f\u7528\u8be5\u5305\u9700\u8981\u514b\u670d\u7684\u95ee\u9898\u662f\u9700\u8981\u5efa\u5e93\uff0c\u6700\u597d\u5c0620\u79cd\u7269\u79cd\u548c\u751f\u50fb\u7269\u79cd\u6570\u636e\u6587\u4ef6\u672c\u5730\u5316\uff0c\u6240\u4ee5\u5173\u952e\u662f\u81ea\u5df1\u6784\u5efaOrgDb\uff1b \u4f5c\u8005\u4e00\u76f4\u5728\u7ef4\u62a4\u548c\u66f4\u65b0\uff0c\u4e0d\u65f6\u52a0\u5165\u65b0\u529f\u80fd\u548c\u6539\u8fdb\u3002","title":"1.5 \u603b\u7ed3"},{"location":"clusterProfiler/#clusterprofiler_1","text":"# \u8f7d\u5165\u5305 > library(clusterProfiler) # \u8bbe\u7f6e\u6211\u7684\u5de5\u4f5c\u8def\u5f84 > setwd(\"/home/shaohuaihan/bin/Iso-seq/image/R\") # \u8bfb\u53d6GO\u6ce8\u91ca\u6587\u4ef6 > go <- read.table(\"test_go_annot.txt\", sep=\"\\t\", quote=\"\") # \u67e5\u770bGO\u5e93\u6570\u636e\u683c\u5f0f > head(go) V1 V2 V3 V4 1 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene1 2 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene2 3 GO:0000015 phosphopyruvate_hydratase_complex cellular_component gene2 # \u5404\u5217\u5206\u522b\u662fGO term\uff0cGO sub term\uff0cGO top term\u548c\u57fa\u56e0ID # \u8bfb\u53d6\u5dee\u5f02\u57fa\u56e0\u5217\u8868 > gene <- read.table(\"test_gene.txt\") # \u67e5\u770b\u57fa\u56e0\u6570\u636e > head(gene) V1 1 gene100 2 gene200 3 gene300 # \u5904\u7406\u5dee\u5f02\u57fa\u56e0\u5217\u8868\uff0c\"data.frame\" \u2014> \"character\" > gene <- as.vector(gene$V1) # GO to gene\u6570\u636e\u6846 > go_term2gene <- data.frame(go$V1, go$V4) > head(go_term2gene) go.V1 go.V4 1 GO:0000015 gene10 2 GO:0000015 gene23 3 GO:0000015 gene32 # \u8868\u5934\u547d\u540d > names(go_term2gene) <- c(\"go_term\", \"gene\") # GO term to GO name\u6570\u636e\u6846 > go_term2name <- data.frame(go$V1, go$V2) > head(go_term2name) go.V1 go.V2 1 GO:0000015 phosphopyruvate_hydratase_complex 2 GO:0000015 phosphopyruvate_hydratase_complex 3 GO:0000015 phosphopyruvate_hydratase_complex # \u8868\u5934\u547d\u540d > names(go_term2name) <- c(\"go_term\", \"name\") # \u81f3\u6b64\uff0c\u5efa\u7acb\u4e86GO Term\u4e0e\u57fa\u56e0ID\u548c\u529f\u80fd\u7684\u5173\u7cfb # \u4f7f\u7528enrichr\u51fd\u6570\u8fdb\u884cGO\u5bcc\u96c6\u5206\u6790 > GO <- enricher(gene=gene, pvalueCutoff = 0.05, qvalueCutoff = 0.2, pAdjustMethod = \"BH\", TERM2GENE = go_term2gene, TERM2NAME = go_term2name) # \u67e5 \u770b \u7ed3 \u679c > GO # over-representation test # #...@organism UNKNOWN #...@ontology UNKNOWN #...@gene chr [1:774] \"Lal000100\" \"Lal001330\" \"Lal001430\" \"Lal001690\" \"Lal001990\" ... #...pvalues adjusted by 'BH' with cutoff <0.05 #...6 enriched terms found # \u7701\u7565\uff0c\u4e0e\u4e0a\u6587\u5bcc\u96c6\u5c55\u793a\u4e00\u6837 # \u6587\u4ef6\u8f93\u51fa > write.table(as.data.frame(GO), file=\"GO_enrichment.txt\", row.names = F, sep=\"\\t\") # \u8868\u5934\u5982\u4e0b\uff1a # ID Description GeneRatio BgRatio pvalue p.adjust qvalue geneID Count # \u53ef\u89c6\u5316 # \u6761\u5f62\u56fe > barplot(GO, showCategory=10) # \u6563\u70b9\u56fe > dotplot(GO) #\u8fd8\u662f\u62a5\u9519\uff1a wrong orderBy parameter;set to default `orderBy = \"x\"` ^_^! # ontology\u8ffd\u52a0\u7ec6\u80de\u7ec4\u5206\uff08CC) > GO@ontology = \"CC\" # \u6ce8\u610f\uff1a\u7531\u4e8e\u4e0d\u4f9d\u8d56\u4e8e\u8f6f\u7532\u7684OrgDb\u6570\u636e\u5e93\uff0cCC\uff0cMF\uff0cBP\u57fa\u56e0\u9700\u8981\u5355\u72ec\u53bb\u505a\u5bcc\u96c6\u5206\u6790 ### KEGG\u5957\u8def\u4e00\u6837 ### # \u8bfb\u53d6KEGG\u6ce8\u91ca\u6587\u4ef6 > kegg <- read.table(\"test_kegg_annot.txt\", sep=\"\\t\", quote=\"\") # \u67e5\u770b\u6570\u636e > head(kegg) V1 V2 V3 1 gene1 K15397 KCS 2 gene2 K01051 E3.1.1.11 3 gene3 K14508 NPR1 # \u540c\u7406 > kegg_term2gene <- data.frame(kegg$V2, kegg$V1) > kegg_term2name <- data.frame(kegg$V2, kegg$V3) > names(kegg_term2gene) <- c(\"ko_term\", \"gene\") > names(kegg_term2name) <- c(\"ko_term\", \"name\") # \u67e5\u770b\u6570\u636e > head(kegg_term2gene) ko_term gene 1 K15397 gene8 2 K01051 gen11 3 K14508 gene92 > head(kegg_term2name) ko_term name 1 K15397 KCS 2 K01051 E3.1.1.11 3 K14508 NPR1 # \u4f7f\u7528enrichr\u51fd\u6570\u8fdb\u884cKEGG\u7684\u5bcc\u96c6\u5206\u6790 > KEGG <- enricher(gene=gene, pvalueCutoff = 0.05, qvalueCutoff = 0.2, AdjustMethod = \"BH\", TERM2GENE = kegg_term2gene, TERM2NAME = kegg_term2name) # \u8f93\u51fa\u5230\u6587\u4ef6 > write.table(as.data.frame(KEGG), file=\"KEGG_enrichment.txt\", row.names = F, sep=\"\\t\") # \u8868\u5934\u4fe1\u606f\u5982\u4e0b # ID Description GeneRatio BgRatio pvalue p.adjust qvalue geneID Count # \u53ef\u89c6\u5316 > barplot(KEGG, showCategory=10) > dotplot(KEGG) # dev.off() \u5173\u4e8eenricher\u65b9\u6cd5 \uff1a enricher package:clusterProfiler R Documentation enricher Description: A universal enrichment analyzer Usage: enricher(gene, pvalueCutoff = 0.05, pAdjustMethod = \"BH\", universe, minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, TERM2GENE, TERM2NAME = NA) Arguments: gene: a vector of gene id pvalueCutoff: pvalue cutoff pAdjustMethod: one of \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\" universe: background genes minGSSize: minimal size of genes annotated for testing maxGSSize: maximal size of genes annotated for testing qvalueCutoff: qvalue cutoff TERM2GENE: user input annotation of TERM TO GENE mapping, a data.frame of 2 column with term and gene TERM2NAME: user input of TERM TO NAME mapping, a data.frame of 2 column with term and name Value: A \u2018enrichResult\u2019 instance Author(s): Guangchuang Yu \u4e00\u4e2a\u901a\u7528\u7684\u8d85\u51e0\u4f55\u68c0\u7edf\u8ba1\u68c0\u9a8c\u65b9\u6cd5 \u200b 2019/07/23-24","title":"\u8865\u5145\uff1a\u975e\u6a21\u5f0f\u7269\u79cdclusterProfiler\u8fdb\u884c\u5bcc\u96c6\u5206\u6790 \uff1a"},{"location":"methy_Haplo/","text":"Title: methy_Haplo Date: 2019-02-01 Category: methyl Tags: methyl, haplotype, block Author: shaohuaihan Summary: \u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e \u57fa\u4e8ebisulfite\u6d4b\u5e8f\u6bd4\u5bf9\u6570\u636e\uff08\u5df2\u53bb\u9664duplicate\u548cunmap\u6570\u636e\uff09\u63d0\u53d6methylation haplotype\u5e76\u9274\u5b9amethylation haplotype block\uff08MHB\uff09\u3002 http://www.nature.com/ng/journal/v49/n4/full/ng.3805.html \u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e $make -f methy_Haplo Description: Methyl Haplo Module for WGBS data USAGE: make -f makefile workDir= FA= genomePre make -f makefile workDir= thread=6 samName= bamFile= hapInfo make -f makefile workDir= samName= region= plotLD cal haplo: genomePre hapInfo and region plot using plotLD make -f makefile workDir= mindepth=5 samName= BAM= mappBin make -f makefile workDir= samName= mindepth=5 mergeHaplo make -f makefile workDir= samName= minR2=0.3 snpBED=you need to prepare calMHB cal MHB: genomePre hapInfo mappBin mergeHaplo calMHB \u53c2\u6570\u8bf4\u660e # \u51c6\u5907CpG\u4fe1\u606f genomePre\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 FA=\u53c2\u8003\u57fa\u56e0\u7ec4\u6587\u4ef6 # \u4ece\u6bd4\u5bf9\u6587\u4ef6\u4e2d\u63d0\u53d6methylation haplotype\u4fe1\u606f hapInfo\uff1a samName=\u6837\u672c\u540d\u79f0 bamFile=\u6bd4\u5bf9\u540e\u7684BAM\u6587\u4ef6\uff08\u4e0d\u8981\u6c42\u6392\u5e8f\uff09 thread=\u7ebf\u7a0b # \u7ed8\u5236LD\u76f8\u5173\u6027\u56fe\u5f62 plotLD\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 region=\u6240\u9700\u7ed8\u5236\u7684\u533a\u57df\uff0ceg chr1:1090:1983 # \u63d0\u53d6high mappability\u533a\u57df mappBin: workDir=\u5de5\u4f5c\u8def\u5f84 mindepth=\u6df1\u5ea6\u9608\u503c\uff0c\u9ed8\u8ba45x samName=\u6837\u672c\u540d\u79f0 BAM=BAM\u6bd4\u5bf9\u6587\u4ef6\uff08\u65e0\u9700\u63d0\u524dsort\uff09 # \u5408\u5e76hapinfo\u6587\u4ef6\u81f3\u4e0a\u8ff0\u8fde\u7eed\u533a\u57df mergeHaplo workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 mindepth=5 # \u9274\u5b9aMHB\uff0c\u9996\u5148methylation haplotype\u88ab\u5206\u5272\u5230\u8fde\u7eed\u7684mappable\u533a\u95f4\u4e2d\uff0c\u8d2a\u5a6a\u7b97\u6cd5\u9009\u53d6\u6700\u5927\u53ef\u80fd\u7684\u8fde\u7eed\u533a\u57df\uff0c\u540c\u65f6\u4fdd\u8bc1\u6709\u6700\u5c0f\u7684\u8fde\u9501\u4e0d\u5e73\u8861\u503c\uff0c\u6b64\u5916block\u4e2d\u81f3\u5c11\u542b\u67093\u4e2aCpG\u4f4d\u70b9\u3002 # \u53c2\u8003\uff1aShoemaker et al. 2010 Genome Research. calMHB\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 minR2=0.3 ld\u6570\u503c snpBED=snp bed\u6587\u4ef6\uff0c\u9700\u8981\u5355\u72ec\u51c6\u5907\uff08\u53ef\u57fa\u4e8eWGS\u6216BS-seq\uff09 \u4f7f\u7528\u793a\u4f8b FASTA=genome.fa BAM=test.bam # step1 make -f methy_Haplo workDir=$PWD samName=test FA=${FASTA} genomePre # example for cpositions file from step1 chr10:W 24 CG chr10:W 31 CG chr10:W 49 CG # step2 make -f methy_Haplo workDir=$PWD thread=6 samName=test bamFile=${BAM} hapInfo #example for haplo info from step2 chr2:127688027-127688030 CC 2 127688027:127688030 chr15:58346987-58346987 T 1 58346987 chr15:58346987-58346987 C 3 58346987 # plot for a example haplo region chr1 68 3358 3291 chr1 3805 10700 6896 chr1 10768 11164 397 make -f methy_Haplo workDir=$PWD samName=test region=chr1:10000-20000 plotLD # step3 make -f methy_Haplo workDir=$PWD mindepth=5 samName=test BAM=${BAM} # mappBin # example mappable bin from step3 chr1 68 3358 3291 chr1 3805 10700 6896 chr1 10768 11164 397 # step4 make -f methy_Haplo workDir=$PWD samName=test mindepth=5 mergeHaplo # result as step2 # step5 make -f methy_Haplo workDir=$PWD samName=test minR2=0.3 snpBED=you need to prepare calMHB # BED file of chr\u3001start and end. Resource https://github.com/dinhdiep/MONOD2","title":"Methylation haolo"},{"location":"methy_Haplo/#_1","text":"\u57fa\u4e8ebisulfite\u6d4b\u5e8f\u6bd4\u5bf9\u6570\u636e\uff08\u5df2\u53bb\u9664duplicate\u548cunmap\u6570\u636e\uff09\u63d0\u53d6methylation haplotype\u5e76\u9274\u5b9amethylation haplotype block\uff08MHB\uff09\u3002 http://www.nature.com/ng/journal/v49/n4/full/ng.3805.html","title":"\u7a0b\u5e8f\u529f\u80fd\u53ca\u539f\u7406\u8bf4\u660e"},{"location":"methy_Haplo/#_2","text":"$make -f methy_Haplo Description: Methyl Haplo Module for WGBS data USAGE: make -f makefile workDir= FA= genomePre make -f makefile workDir= thread=6 samName= bamFile= hapInfo make -f makefile workDir= samName= region= plotLD cal haplo: genomePre hapInfo and region plot using plotLD make -f makefile workDir= mindepth=5 samName= BAM= mappBin make -f makefile workDir= samName= mindepth=5 mergeHaplo make -f makefile workDir= samName= minR2=0.3 snpBED=you need to prepare calMHB cal MHB: genomePre hapInfo mappBin mergeHaplo calMHB","title":"\u7a0b\u5e8f\u4f7f\u7528\u8bf4\u660e"},{"location":"methy_Haplo/#_3","text":"# \u51c6\u5907CpG\u4fe1\u606f genomePre\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 FA=\u53c2\u8003\u57fa\u56e0\u7ec4\u6587\u4ef6 # \u4ece\u6bd4\u5bf9\u6587\u4ef6\u4e2d\u63d0\u53d6methylation haplotype\u4fe1\u606f hapInfo\uff1a samName=\u6837\u672c\u540d\u79f0 bamFile=\u6bd4\u5bf9\u540e\u7684BAM\u6587\u4ef6\uff08\u4e0d\u8981\u6c42\u6392\u5e8f\uff09 thread=\u7ebf\u7a0b # \u7ed8\u5236LD\u76f8\u5173\u6027\u56fe\u5f62 plotLD\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 region=\u6240\u9700\u7ed8\u5236\u7684\u533a\u57df\uff0ceg chr1:1090:1983 # \u63d0\u53d6high mappability\u533a\u57df mappBin: workDir=\u5de5\u4f5c\u8def\u5f84 mindepth=\u6df1\u5ea6\u9608\u503c\uff0c\u9ed8\u8ba45x samName=\u6837\u672c\u540d\u79f0 BAM=BAM\u6bd4\u5bf9\u6587\u4ef6\uff08\u65e0\u9700\u63d0\u524dsort\uff09 # \u5408\u5e76hapinfo\u6587\u4ef6\u81f3\u4e0a\u8ff0\u8fde\u7eed\u533a\u57df mergeHaplo workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 mindepth=5 # \u9274\u5b9aMHB\uff0c\u9996\u5148methylation haplotype\u88ab\u5206\u5272\u5230\u8fde\u7eed\u7684mappable\u533a\u95f4\u4e2d\uff0c\u8d2a\u5a6a\u7b97\u6cd5\u9009\u53d6\u6700\u5927\u53ef\u80fd\u7684\u8fde\u7eed\u533a\u57df\uff0c\u540c\u65f6\u4fdd\u8bc1\u6709\u6700\u5c0f\u7684\u8fde\u9501\u4e0d\u5e73\u8861\u503c\uff0c\u6b64\u5916block\u4e2d\u81f3\u5c11\u542b\u67093\u4e2aCpG\u4f4d\u70b9\u3002 # \u53c2\u8003\uff1aShoemaker et al. 2010 Genome Research. calMHB\uff1a workDir=\u5de5\u4f5c\u8def\u5f84 samName=\u6837\u672c\u540d\u79f0 minR2=0.3 ld\u6570\u503c snpBED=snp bed\u6587\u4ef6\uff0c\u9700\u8981\u5355\u72ec\u51c6\u5907\uff08\u53ef\u57fa\u4e8eWGS\u6216BS-seq\uff09","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"methy_Haplo/#_4","text":"FASTA=genome.fa BAM=test.bam # step1 make -f methy_Haplo workDir=$PWD samName=test FA=${FASTA} genomePre # example for cpositions file from step1 chr10:W 24 CG chr10:W 31 CG chr10:W 49 CG # step2 make -f methy_Haplo workDir=$PWD thread=6 samName=test bamFile=${BAM} hapInfo #example for haplo info from step2 chr2:127688027-127688030 CC 2 127688027:127688030 chr15:58346987-58346987 T 1 58346987 chr15:58346987-58346987 C 3 58346987 # plot for a example haplo region chr1 68 3358 3291 chr1 3805 10700 6896 chr1 10768 11164 397 make -f methy_Haplo workDir=$PWD samName=test region=chr1:10000-20000 plotLD # step3 make -f methy_Haplo workDir=$PWD mindepth=5 samName=test BAM=${BAM} # mappBin # example mappable bin from step3 chr1 68 3358 3291 chr1 3805 10700 6896 chr1 10768 11164 397 # step4 make -f methy_Haplo workDir=$PWD samName=test mindepth=5 mergeHaplo # result as step2 # step5 make -f methy_Haplo workDir=$PWD samName=test minR2=0.3 snpBED=you need to prepare calMHB # BED file of chr\u3001start and end.","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"methy_Haplo/#resource","text":"https://github.com/dinhdiep/MONOD2","title":"Resource"}]}